#INCLUDE "FEMATR900.CH"
#INCLUDE "PROTHEUS.CH"
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ FEMATR900³ Autor ³ Nereu Humberto Junior ³ Data ³ 25.07.06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Kardex fisico - financeiro                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Alteração: Marcelo Klopfer Leme - Farinelli Sistemas - 22/06/2016      ³±±
±± Redefinição da ordem de impressão do relatorio para:                   ³±±
±± cOrder := "%2,9,10%" Produto - Data - TES                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
User Function FEMATR900()

Local oReport

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Interface de impressao                                                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oReport:= ReportDef()
oReport:PrintDialog()

Return
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³ReportDef ³ Autor ³Nereu Humberto Junior  ³ Data ³25.07.2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³A funcao estatica ReportDef devera ser criada para todos os ³±±
±±³          ³relatorios que poderao ser agendados pelo usuario.          ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpO1: Objeto do relatorio                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                      ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function ReportDef()

Local oReport
Local oSection1
Local oSection2
Local oSection3
Local oCell
Local aOrdem      := {}
Local cPicB2Loca  := PesqPict("SB2","B2_LOCAL",18)
Local cTamB2Loca  := TamSX3('B2_LOCAL')[1]
Local cPicB2Qt    := PesqPictQt("B2_QATU" ,18)
Local cTamB2Qt    := TamSX3('B2_QATU')[1]
Local cPicB2Cust  := PesqPict("SB2","B2_CM1",18)
Local cTamB2Cust  := TamSX3('B2_CM1')[1]
Local cPicD1Qt    := PesqPict("SD1","D1_QUANT" ,18)
Local cTamD1Qt    := TamSX3('D1_QUANT')[1]
Local cPicD1Cust  := PesqPict("SD1","D1_CUSTO",18)
Local cTamD1Cust  := TamSX3('D1_CUSTO')[1]
Local cPicD2Qt    := PesqPict("SD2","D2_QUANT" ,18)
Local cTamD2Qt    := TamSX3('D2_QUANT')[1]
Local cPicD2Cust  := PesqPict("SD2","D2_CUSTO1",18)
Local cTamD2Cust  := TamSX3('D2_CUSTO1')[1]
Local cTamD1CF    := TamSX3('D1_CF')[1]
Local cTamCCPVPJOP:= TamSX3(MaiorCampo("D3_CC;D3_PROJPMS;D3_OP;D2_CLIENTE"))[1]
Local lVEIC       := Upper(GetPar("MV_VEICULO"))=="S"
Local nTamData 	  := IIF(__SetCentury(),10,8)
Local lVer116     := (VAL(GetVersao(.F.)) == 11 .And. GetRpoRelease() >= "R6" .Or. VAL(GetVersao(.F.))  > 11)
Local cPerg       := "FEMTR900"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³MV_CUSFIL - Parametro utilizado para verificar se o sistema   |
//|utiliza custo unificado por:                                  |
//|      F = Custo Unificado por Filial                          |
//|      E = Custo Unificado por Empresa                         |
//|      A = Custo Unificado por Armazem                         |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local lCusFil    := AllTrim(GetPar('MV_CUSFIL' ,.F.,"A")) == "F"
Local lCusEmp    := AllTrim(GetPar('MV_CUSFIL' ,.F.,"A")) == "E"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³MV_CUSREP - Parametro utilizado para habilitar o calculo do   ³
//³            Custo de Reposicao.                               ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local lCusRep  := GetPar("MV_CUSREP",.F.,.F.) .And. (FindFunction("MA330AvRep") .And. MA330AvRep())

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//| Checa versao dos fontes relacionados. NAO REMOVER !!!           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !(FindFunction("SIGACUSA_V")	.And. SIGACUSA_V() >= 20091212)
	Final(OemToAnsi(STR0062)) //"Atualizar SIGACUSA.PRX"
EndIf
If !(FindFunction("SIGACUSB_V")	.And. SIGACUSB_V() >= 20091212)
	Final(OemToAnsi(STR0063)) //"Atualizar SIGACUSB.PRX"
EndIf
If !(FindFunction("MATXFUNB_V")	.And. MATXFUNB_V() >= 20091212)
	Final(OemToAnsi(STR0064)) //"Atualizar MATXFUNB.PRX"
EndIf
If !(FindFunction("MATA330_V")	.And. MATA330_V() >= 20091212)
	Final(OemToAnsi(STR0067)) //"Atualizar MATA330.PRX"
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Criacao do componente de impressao                                      ³
//³                                                                        ³
//³TReport():New                                                           ³
//³ExpC1 : Nome do relatorio                                               ³
//³ExpC2 : Titulo                                                          ³
//³ExpC3 : Pergunte                                                        ³
//³ExpB4 : Bloco de codigo que sera executado na confirmacao da impressao  ³
//³ExpC5 : Descricao                                                       ³
//³                                                                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oReport:= TReport():New("FEMATR900",STR0001,cPerg, {|oReport| U_FeRptPrint(oReport)},STR0002+" "+STR0003)
oReport:SetLandscape()
oReport:SetTotalInLine(.F.)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica as perguntas selecionadas                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis utilizadas para parametros                     ³
//³ mv_par01         // Do produto                           ³
//³ mv_par02         // Ate o produto                        ³
//³ mv_par03         // Do tipo                              ³
//³ mv_par04         // Ate o tipo                           ³
//³ mv_par05         // Da data                              ³
//³ mv_par06         // Ate a data                           ³
//³ mv_par07         // Lista produtos s/movimento           ³
//³ mv_par08         // Qual Local De (almoxarifado)                    ³
//³ mv_par09 (Novo)            // Qual Local Até (almoxarifado)         ³
//³ mv_par10 (MV_par09)         // (d)OCUMENTO/(s)EQUENCIA              ³
//³ mv_par11 (mv_par10)         // moeda selecionada ( 1 a 5 )          ³
//³ mv_par12 (mv_par11)         // Seq.de Digitacao /Calculo            ³
//³ mv_par13 (mv_par12)         // Pagina Inicial                       ³
//³ mv_par14 (mv_par13)         // Lista Transf Locali (Sim/Nao)        ³
//³ mv_par15 (mv_par14)         // Do  Grupo                            ³
//³ mv_par16 (mv_par15)         // Ate o Grupo                          ³
//³ mv_par17 (mv_par16)         // Seleciona Filial?                    ³
//³ mv_par18 (mv_par17)         // Qual Custo ? ( Medio / Reposicao )   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Pergunte(cPerg,.F.)

Aadd( aOrdem, STR0004 ) // " Codigo Produto "
Aadd( aOrdem, STR0005 ) // " Tipo do Produto"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Definicao da Sessao 1 - Dados do Produto                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oSection1 := TRSection():New(oReport,STR0059,{"SB1","SB2"},aOrdem) //"Produtos (Parte 1)"
oSection1 :SetTotalInLine(.F.)
oSection1 :SetReadOnly()
oSection1 :SetLineStyle()

If lVeic
	TRCell():New(oSection1,"B1_CODITE","SB1",/*Titulo*/					,/*Picture*/,/*Tamanho*/	,/*lPixel*/,/*{|| code-block de impressao }*/)
EndIf
TRCell():New(oSection1,"cProduto"	,"   ",/*Titulo*/					,/*Picture*/,/*Tamanho*/	,/*lPixel*/,/*{|| code-block de impressao }*/)
oSection1:Cell("cProduto"):GetFieldInfo("B1_COD")
TRCell():New(oSection1,"B1_DESC"	,"SB1",/*Titulo*/					,/*Picture*/,30				,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oSection1,"B1_UM"		,"SB1",STR0053						,/*Picture*/,/*Tamanho*/	,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oSection1,"cTipo"		,"   ",STR0054						,"@!"		,2				,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oSection1,"B1_GRUPO"	,"SB1",STR0055						,/*Picture*/,/*Tamanho*/	,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oSection1,"nCusMed"	,"   ",IIf(lCusRep .And. mv_par18==2,STR0068,STR0056)	,cPicB2Cust	,cTamB2Cust		,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oSection1,"nQtdSal"	,"   ",STR0034						,cPicB2Qt	,cTamB2Qt		,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oSection1,"nVlrSal"	,"   ",STR0035						,cPicB2Cust	,cTamB2Cust		,/*lPixel*/,/*{|| code-block de impressao }*/)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Definicao da Sessao 2 - Cont. dos dados do Produto           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lVer116
	oSection2 := TRSection():New(oSection1,STR0060,{"SB1","SB2","NNR"}) //"Produtos (Parte 2)"
Else
	oSection2 := TRSection():New(oSection1,STR0060,{"SB1","SB2"}) //"Produtos (Parte 2)"
EndIf
oSection2 :SetTotalInLine(.F.)
oSection2 :SetReadOnly()
oSection2 :SetLineStyle()

If lVeic
	TRCell():New(oSection2	,"cProduto"		,"   ",/*Titulo*/	,/*Picture*/	,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
	oSection2:Cell("cProduto"):GetFieldInfo("B1_COD")
	TRCell():New(oSection2	,"B1_UM"		,"SB1",STR0053		,/*Picture*/	,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
	TRCell():New(oSection2	,"cTipo"		,"   ",STR0054		,"@!"			,2			,/*lPixel*/,/*{|| code-block de impressao }*/)
	TRCell():New(oSection2	,"B1_GRUPO"		,"SB1",STR0055		,/*Picture*/	,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
Endif
If cPaisLoc<>"CHI"
	TRCell():New(oSection2	,"B1_POSIPI"	,"SB1",STR0057		,/*Picture*/	,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
Endif

If lVer116
	TRCell():New(oSection2		,'cArmazem'	,"   ",STR0058		,cPicB2Loca   	,9			,/*lPixel*/,/*{|| code-block de impressao }*/)
Else
	TRCell():New(oSection2		,"cArmazem"	,"   ",STR0058		,cPicB2Loca		,cTamB2Loca	,/*lPixel*/,/*{|| code-block de impressao }*/)
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Definicao da Sessao 3 - Movimentos                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oSection3 := TRSection():New(oSection2,STR0061,{"SD1","SD2","SD3"}) //"Movimentação dos Produtos"
oSection3 :SetHeaderPage()
oSection3 :SetTotalInLine(.F.)
oSection3 :SetTotalText(STR0021) //"T O T A I S  :"
oSection3 :SetReadOnly()

TRCell():New(oSection3,"dDtMov"		,"   ",STR0036+CRLF+STR0037	,/*Picture*/,nTamData		,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oSection3,"cTES"		,"   ",STR0038				,"@!"		,/*Tamanho*/	,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oSection3,"cCF"		,"   ",STR0039				,"@!"		,cTamD1CF		,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oSection3,"cDoc"		,"   ",STR0040+CRLF+STR0041	,"@!"		,/*Tamanho*/	,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oSection3,"cTraco1"	,"   ","|"+CRLF+"|"			,/*Picture*/,1		   		,/*lPixel*/,{|| "|" })
TRCell():New(oSection3,"nENTQtd"	,"   ",STR0042+CRLF+STR0043	,cPicD1Qt	,cTamD1Qt  		,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oSection3,"cTraco2"	,"   ","|"+CRLF+"|"			,/*Picture*/,1		   		,/*lPixel*/,{|| "|" })
TRCell():New(oSection3,"nENTCus"	,"   ",STR0042+CRLF+STR0044	,cPicD1Cust	,cTamD1Cust		,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oSection3,"cTraco3"	,"   ","|"+CRLF+"|"			,/*Picture*/,1		   		,/*lPixel*/,{|| "|" })
TRCell():New(oSection3,"nCusMov"	,"   ",STR0045+CRLF+STR0046	,cPicB2Cust	,cTamB2Cust		,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oSection3,"cTraco4"	,"   ","|"+CRLF+"|"			,/*Picture*/,1		   		,/*lPixel*/,{|| "|" })
TRCell():New(oSection3,"nSAIQtd"	,"   ",STR0047+CRLF+STR0043	,cPicD2Qt	,cTamD2Qt		,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oSection3,"cTraco5"	,"   ","|"+CRLF+"|"			,/*Picture*/,1				,/*lPixel*/,{|| "|" })
TRCell():New(oSection3,"nSAICus"	,"   ",STR0047+CRLF+STR0044	,cPicD2Cust	,cTamD2Cust		,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oSection3,"cTraco6"	,"   ","|"+CRLF+"|"			,/*Picture*/,1				,/*lPixel*/,{|| "|" })
TRCell():New(oSection3,"nSALDQtd"	,"   ",STR0048+CRLF+STR0043	,cPicB2Qt	,cTamB2Qt		,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oSection3,"cTraco7"	,"   ","|"+CRLF+"|"			,/*Picture*/,1				,/*lPixel*/,{|| "|" })
TRCell():New(oSection3,"nSALDCus"	,"   ",STR0048+CRLF+STR0049	,cPicB2Cust	,cTamB2Cust		,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oSection3,"cTraco8"	,"   ","|"+CRLF+"|"			,/*Picture*/,1		   		,/*lPixel*/,{|| "|" })
TRCell():New(oSection3,"cCCPVPJOP"	,"   ",STR0050+CRLF+STR0051 ,"@!"		,cTamCCPVPJOP+2 ,/*lPixel*/,/*{|| code-block de impressao }*/)

// Definir o formato de valores negativos (para o caso de devolucoes)
oSection3:Cell("nENTQtd"):SetNegative("PARENTHESES")
oSection3:Cell("nENTCus"):SetNegative("PARENTHESES")
oSection3:Cell("nSAIQtd"):SetNegative("PARENTHESES")
oSection3:Cell("nSAICus"):SetNegative("PARENTHESES")

TRFunction():New(oSection3:Cell("nENTQtd")	,"TENTQTD","SUM"	,/*oBreak*/,"",cPicD1Qt		,{|| oSection3:Cell("nENTQtd"):GetValue(.T.) },.T.,.T.)
TRFunction():New(oSection3:Cell("nENTCus")	,"TENTCUS","SUM"	,/*oBreak*/,"",cPicD1Cust	,{|| oSection3:Cell("nENTCus"):GetValue(.T.) },.T.,.T.)

TRFunction():New(oSection3:Cell("nSAIQtd")	,"TSAIQTD","SUM"	,/*oBreak*/,"",cPicD2Qt		,{|| oSection3:Cell("nSAIQtd"):GetValue(.T.) },.T.,.T.)
TRFunction():New(oSection3:Cell("nSAICus")	,"TSAICUS","SUM"	,/*oBreak*/,"",cPicD2Cust	,{|| oSection3:Cell("nSAICus"):GetValue(.T.) },.T.,.T.)

TRFunction():New(oSection3:Cell("nSALDQtd")	,"TSALQTD","ONPRINT",/*oBreak*/,"",cPicB2Qt		,{|| oSection3:Cell("nSALDQtd"):GetValue(.T.) },.T.,.T.)
TRFunction():New(oSection3:Cell("nSALDCus")	,"TSALCUS","ONPRINT",/*oBreak*/,"",cPicB2Cust	,{|| oSection3:Cell("nSALDCus"):GetValue(.T.) },.T.,.T.)

oSection3:SetNoFilter("SD1")
oSection3:SetNoFilter("SD2")
oSection3:SetNoFilter("SD3")

Return(oReport)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³ReportPrin³ Autor ³Nereu Humberto Junior  ³ Data ³21.06.2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³A funcao estatica ReportDef devera ser criada para todos os ³±±
±±³          ³relatorios que poderao ser agendados pelo usuario.          ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpO1: Objeto Report do Relatório                           ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
User Function FeRptPrint(oReport)

Static lIxbConTes := NIL

Local oSection1 := oReport:Section(1)
Local oSection2 := oReport:Section(1):Section(1)
Local oSection3 := oReport:Section(1):Section(1):Section(1)
Local nOrdem    := oReport:Section(1):GetOrder()
Local cSelectD1 := '', cWhereD1 := '', cWhereD1C := ''
Local cSelectD2 := '', cWhereD2 := '', cWhereD2C := ''
Local cSelectD3 := '', cWhereD3 := '', cWhereD3C := ''
Local cSelectVe := '%%', cUnion := '%%'
Local aDadosTran:= {}
Local lContinua := .F.
Local lFirst    := .T.
Local lTransEnd := .T.
Local aSalAtu   := { 0,0,0,0,0,0,0 }
Local cPicB2Qt2 := PesqPictQt("B2_QTSEGUM" ,18)
Local cTRBSD1	:= CriaTrab(,.F.)
Local cTRBSD2	:= Subs(cTrbSD1,1,7)+"A"
Local cTRBSD3	:= Subs(cTrbSD1,1,7)+"B"
Local cSeqIni 	:= Replicate("z",6)
Local nRegTr    := 0
Local nTotRegs  := 0
Local nInd      := 0
Local cProdAnt  := ""
Local cLocalAnt := ""
Local cIndice	:= ""
Local cCampo1   := ""
Local cCampo2   := ""
Local cCampo3   := ""
Local cCampo4   := ""
Local cNumSeqTr := ""
Local cAlias    := ""
Local cTipoNf   := ""
// Indica se esta listando relatorio do almox. de processo
Local lLocProc  := alltrim(mv_par08) == GetPar("MV_LOCPROC")
// Indica se deve imprimir movimento invertido (almox. de processo)
Local lInverteMov :=.F.
Local lPriApropri :=.T.
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se existe ponto de entrada                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local lTesNEst := .F.
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Codigo do produto importado - NAO DEVE SER LISTADO           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local cProdImp := GetPar("MV_PRODIMP")

Local cWhereB1A:= " "
Local cWhereB1B:= " "
Local cWhereB1C:= " "
Local cWhereB1D:= " "

Local cQueryB1A:= " "
Local cQueryB1B:= " "
Local cQueryB1C:= " "
Local cQueryB1D:= " "

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Concessionaria de Veiculos                                   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local lVEIC    := Upper(GetPar("MV_VEICULO"))=="S"

Local lImpSMov := .F.
Local lImpS3   := .F.
LOCAL cProdMNT := GetPar("MV_PRODMNT")
LOCAL cProdTER := GetPar("MV_PRODTER")
Local aProdsMNT := {}

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis utilizadas para processamento de Filiais           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local aFilsCalc := MatFilCalc( Iif (!IsBlind(), mv_par17 == 1, .F.))
Local cFilBack  := cFilAnt
Local nForFilial:= 0

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variavel utilizada para inicar a pagina do relatorio³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local n_pag     := mv_par13
Local cAliasTop := GetNextAlias()
Local cCondicao := ""
Local cFilUsrSB1:= oSection1:GetAdvplExp("SB1")
Local cFilUsrSB2:= oSection1:GetAdvplExp("SB2")

Local nTotSaldQtd := 0
Local nTotSaldCus := 0

Private bBloco   := { |nV,nX| Trim(nV)+IIf(Valtype(nX)='C',"",Str(nX,1)) }

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³MV_CUSREP - Parametro utilizado para habilitar o calculo do   ³
//³            Custo de Reposicao.                               ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private lCusRep  := GetPar("MV_CUSREP",.F.,.F.) .And. (FindFunction("MA330AvRep") .And. MA330AvRep())

cProdMNT := cProdMNT + Space(15-Len(cProdMNT))
cProdTER := cProdTER + Space(15-Len(cProdTER))

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³MV_CUSFIL - Parametro utilizado para verificar se o sistema   |
//|utiliza custo unificado por:                                  |
//|      F = Custo Unificado por Filial                          |
//|      E = Custo Unificado por Empresa                         |
//|      A = Custo Unificado por Armazem                         |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private lCusFil    := AllTrim(GetPar('MV_CUSFIL' ,.F.,"A")) == "F"
Private lCusEmp    := AllTrim(GetPar('MV_CUSFIL' ,.F.,"A")) == "E"
Private lMultArm   := .F.

lCusFil:=lCusFil .And. (mv_par08 == Repl("*",TamSX3("B2_LOCAL")[1]) .Or. mv_par09 == Repl("*",TamSX3("B2_LOCAL")[1]))
lCusEmp:=lCusEmp .And. (mv_par08 == Repl("#",TamSX3("B2_LOCAL")[1]) .Or. mv_par09 == Repl("#",TamSX3("B2_LOCAL")[1]))
lMultArm := !lCusFil .And. !lCusEmp .And. mv_par08 <> mv_par09 // Indica se o usuário selecionou múltiplos armazéns

Private lDev := .F. // Flag que indica se nota ‚ devolu‡ao (.T.) ou nao (.F.)

oReport:SetPageNumber(n_pag)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Alerta o usuario que o custo de reposicao esta desativado.   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If mv_par18==2 .And. !lCusRep
	Help(" ",1,"A910CUSRP")
	mv_par18 := 1
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ aFilsCalc - Array com filiais a serem processadas            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !Empty(aFilsCalc)
	
	For nForFilial := 1 To Len( aFilsCalc )
		
		If aFilsCalc[ nForFilial, 1 ]
			
			cFilAnt := aFilsCalc[ nForFilial, 2 ]
			
			oReport:EndPage() //Reinicia Pagina
			
			oReport:SetTitle(OemToAnsi(STR0008) + IIf(mv_par12==1,IIf(lCusRep .And. mv_par18==2,STR0065,STR0009),IIf(lCusRep .And. mv_par18==2,STR0066,STR0010) ) + " " + IIf(lCusFil .Or. lCusEmp,"",OemToAnsi(STR0011)+mv_par08+" a "+mv_par09) ) // "KARDEX FISICO-FINANCEIRO "###"(SEQUENCIA)"###"(CALCULO)"###"L O C A L :"
			// "KARDEX FISICO-FINANCEIRO "###"(SEQUENCIA)"###"(CALCULO)"###"L O C A L :"
			If nOrdem == 1
				oReport:SetTitle( oReport:Title()+Alltrim(STR0017+STR0004+STR0018+AllTrim(GetPar("MV_SIMB"+Ltrim(Str(mv_par11))))+")")+'-' + AllTrim(aFilsCalc[ nForFilial, 3 ]) ) //" (Por "###" ,em "
			Else
				oReport:SetTitle( oReport:Title()+Alltrim(STR0017+STR0005+STR0018+AllTrim(GetPar("MV_SIMB"+Ltrim(Str(mv_par11))))+")")+'-' + AllTrim(aFilsCalc[ nForFilial, 3 ]) ) //" (Por "###" ,em "
			EndIf
			
			If lVeic
				oSection1:Cell("cProduto"	):Disable()
				oSection1:Cell("B1_UM"		):Disable()
				oSection1:Cell("cTipo"		):Disable()
				oSection1:Cell("B1_GRUPO"	):Disable()
			EndIf
			
			If mv_par10 $ "Ss"
				oSection3:Cell("cDoc"):SetTitle(STR0052+CRLF+STR0041) //"SEQUENCIA"
			EndIf
			
			dbSelectArea("SD1")   // Itens de Entrada
			nTotRegs += LastRec()
			
			dbSelectArea("SD2")   // Itens de Saida
			nTotRegs += LastRec()
			
			dbSelectArea("SD3")   // movimentacoes internas (producao/requisicao/devolucao)
			nTotRegs += LastRec()
			
			dbSelectArea("SB2")  // Saldos em estoque
			dbSetOrder(1)
			nTotRegs += LastRec()
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³MTAAVLTES - Ponto de Entrada executado durante a montagem do relatorio  |
			//|            para verificar se devera considerar TES que nao atualiza    |
			//|            saldos em estoque.                                          |
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			lIxbConTes := IF(lIxbConTes == NIL,ExistBlock("MTAAVLTES"),lIxbConTes)
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Filtragem do relatorio                                                  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Transforma parametros Range em expressao SQL                            ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			MakeSqlExpr(oReport:uParam)
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Query do relatorio da secao 1                                           ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			oReport:Section(1):BeginQuery()
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Complemento do SELECT da tabela SD1                                     ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lCusRep .And. mv_par18==2
				cSelectD1 := "% D1_CUSRP"
				cSelectD1 += Str(mv_par11,1,0) // Coloca a Moeda do Custo
			Else
				cSelectD1 := "% D1_CUSTO"
				If mv_par11 > 1
					cSelectD1 += Str(mv_par11,1,0) // Coloca a Moeda do Custo
				EndIf
			EndIf
			cSelectD1 += " CUSTO,"
			cSelectD1 += "%"
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Complemento do SELECT da tabela SB1 para MV_VEICULO                     ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			cSelectVe := "%"
			cSelectVe += ","
			If lVEIC
				cSelectVe += "SB1.B1_CODITE B1_CODITE,"
			EndIf
			cSelectVe += "%"
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Complemento do Where da tabela SD1                                      ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			cWhereD1 := "%"
			cWhereD1 += "AND"
			If !(lCusFil .Or. lCusEmp)
				cWhereD1 += " D1_LOCAL >= '" + mv_par08 + "' AND D1_LOCAL <= '" + mv_par09 + "' AND"
			EndIf
			cWhereD1 += "%"
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Complemento do Where da tabela SD1 (Tratamento Filial)                  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lCusEmp
				If !Empty(xFilial("SD1")) .And. !Empty(xFilial("SF4"))
					cWhereD1C := "%"
					cWhereD1C += " D1_FILIAL = F4_FILIAL AND "
					cWhereD1C += "%"
				Else
					cWhereD1C := "% %"
				EndIf
			Else
				cWhereD1C := "%"
				cWhereD1C += " D1_FILIAL ='" + xFilial("SD1") + "' AND "
				cWhereD1C += " SF4.F4_FILIAL = '" + xFilial("SF4") + "' AND"
				cWhereD1C += "%"
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Complemento do SELECT da tabela SD2                                     ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lCusRep .And. mv_par18==2
				cSelectD2 := "% D2_CUSRP"
				cSelectD2 += Str(mv_par11,1,0) // Coloca a Moeda do Custo
			Else
				cSelectD2 := "% D2_CUSTO"
				cSelectD2 += Str(mv_par11,1,0) // Coloca a Moeda do Custo
			EndIf
			cSelectD2 += " CUSTO,"
			cSelectD2 += "%"
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Complemento do Where da tabela SD1                                      ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			cWhereD2 := "%"
			cWhereD2 += "AND"
			If !(lCusFil .Or. lCusEmp)
				cWhereD2 += " D2_LOCAL >= '" + mv_par08 + "' AND D2_LOCAL <= '" + mv_par09 + "' AND"
			EndIf
			cWhereD2 += "%"
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Complemento do Where da tabela SD2 (Tratamento Filial)                  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lCusEmp
				If !Empty(xFilial("SD2")) .And. !Empty(xFilial("SF4"))
					cWhereD2C := "%"
					cWhereD2C += " D2_FILIAL = F4_FILIAL AND "
					cWhereD2C += "%"
				Else
					cWhereD2C := "% %"
				EndIf
			Else
				cWhereD2C := "%"
				cWhereD2C += " D2_FILIAL ='" + xFilial("SD2") + "' AND "
				cWhereD2C += " SF4.F4_FILIAL = '" + xFilial("SF4") + "' AND"
				cWhereD2C += "%"
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Complemento do SELECT da tabelas SD3                                    ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lCusRep .And. mv_par18==2
				cSelectD3 := "% D3_CUSRP"
				cSelectD3 += Str(mv_par11,1,0) // Coloca a Moeda do Custo
			Else
				cSelectD3 := "% D3_CUSTO"
				cSelectD3 += Str(mv_par11,1,0) // Coloca a Moeda do Custo
			EndIf
			cSelectD3 +=	" CUSTO,"
			cSelectD3 += "%"
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Complemento do WHERE da tabela SD3                                      ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			cWhereD3 := "%"
			If GetPar('MV_D3ESTOR', .F., 'N') == 'N'
				cWhereD3 += " D3_ESTORNO <> 'S' AND"
			EndIf
			If GetPar('MV_D3SERVI', .F., 'N') == 'N' .And. IntDL()
				cWhereD3 += " ( (D3_SERVIC = '   ') OR (D3_SERVIC <> '   ' AND D3_TM <= '500')  "
				cWhereD3 += " OR  (D3_SERVIC <> '   ' AND D3_TM > '500' AND D3_LOCAL ='"+GetPar('MV_CQ', .F., '98')+"') ) AND"
			EndIf
			If !(lCusFil .Or. lCusEmp) .And. !lLocProc
				cWhereD3 += " D3_LOCAL >= '"+mv_par08+"' AND D3_LOCAL <= '"+mv_par09+"' AND"
			EndIf
			If	!lVEIC
				cWhereD3+= " SB1.B1_COD >= '"+mv_par01+"' AND SB1.B1_COD <= '"+mv_par02+"' AND"
			Else
				cWhereD3+= " SB1.B1_CODITE >= '"+mv_par01+"' AND SB1.B1_CODITE <= '"+mv_par02+"' AND"
			EndIf
			If lCusEmp
				cWhereD3 += " SB1.B1_TIPO >= '"+mv_par03+"' AND SB1.B1_TIPO <= '"+mv_par04+"' AND"
			Else
				cWhereD3 += " SB1.B1_FILIAL = '"+xFilial("SB1")+"' AND SB1.B1_TIPO >= '"+mv_par03+"' AND SB1.B1_TIPO <= '"+mv_par04+"' AND"
			EndIf
			cWhereD3 += " SB1.B1_GRUPO >= '"+mv_par15+"' AND SB1.B1_GRUPO <= '"+mv_par16+"' AND SB1.B1_COD <> '"+cProdimp+"' AND "
			cWhereD3 += " SB1.D_E_L_E_T_=' ' AND"
			cWhereD3 += "%"
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Complemento do Where da tabela SD3 (Tratamento Filial)                  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lCusEmp
				cWhereD3C := "% %"
			Else
				cWhereD3C := "%"
				cWhereD3C += " D3_FILIAL ='" + xFilial("SD3")  + "' AND "
				cWhereD3C += "%"
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Complemento do WHERE da tabela SB1 para todos os selects                ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			cWhereB1A:= "%"
			cWhereB1B:= "%"
			cWhereB1C:= "%"
			cWhereB1D:= "%"
			If	!lVEIC
				cWhereB1A+= " AND SB1.B1_COD >= '"+mv_par01+"' AND SB1.B1_COD <= '"+mv_par02+"'"
				cWhereB1B+= " AND SB1.B1_COD = SB1EXS.B1_COD"
				If lCusEmp
					cWhereB1C+= " SB1.B1_TIPO >= '"+mv_par03+"' AND SB1.B1_TIPO <= '"+mv_par04+"' AND"
					cWhereB1D+= " SB1EXS.B1_COD >= '"+mv_par01+"' AND SB1EXS.B1_COD <= '"+mv_par02+"' AND SB1EXS.B1_TIPO >= '"+mv_par03+"' AND SB1EXS.B1_TIPO <= '"+mv_par04+"' AND"
				Else
					cWhereB1C+= " SB1.B1_FILIAL = '"+xFilial("SB1")+"' AND SB1.B1_TIPO >= '"+mv_par03+"' AND SB1.B1_TIPO <= '"+mv_par04+"' AND"
					cWhereB1D+= " SB1EXS.B1_FILIAL = '"+xFilial("SB1")+"' AND SB1EXS.B1_COD >= '"+mv_par01+"' AND SB1EXS.B1_COD <= '"+mv_par02+"' AND SB1EXS.B1_TIPO >= '"+mv_par03+"' AND SB1EXS.B1_TIPO <= '"+mv_par04+"' AND"
				EndIf
			Else
				cWhereB1A+= " AND SB1.B1_CODITE >= '"+mv_par01+"' AND SB1.B1_CODITE <= '"+mv_par02+"'"
				cWhereB1B+= " AND SB1.B1_COD = SB1EXS.B1_COD"
				If lCusEmp
					cWhereB1C+= " SB1.B1_TIPO >= '"+mv_par03+"' AND SB1.B1_TIPO <= '"+mv_par04+"' AND"
					cWhereB1D+= " SB1EXS.B1_CODITE >= '"+mv_par01+"' AND SB1EXS.B1_CODITE <= '"+mv_par02+"' AND SB1EXS.B1_TIPO >= '"+mv_par03+"' AND SB1EXS.B1_TIPO <= '"+mv_par04+"' AND"
				Else
					cWhereB1C+= " SB1.B1_FILIAL = '"+xFilial("SB1")+"' AND SB1.B1_TIPO >= '"+mv_par03+"' AND SB1.B1_TIPO <= '"+mv_par04+"' AND"
					cWhereB1D+= " SB1EXS.B1_FILIAL = '"+xFilial("SB1")+"' AND SB1EXS.B1_CODITE >= '"+mv_par01+"' AND SB1EXS.B1_CODITE <= '"+mv_par02+"' AND SB1EXS.B1_TIPO >= '"+mv_par03+"' AND SB1EXS.B1_TIPO <= '"+mv_par04+"' AND"
				EndIf
			EndIf
			
			cWhereB1C += " SB1.B1_GRUPO >= '"+mv_par15+"' AND SB1.B1_GRUPO <= '"+mv_par16+"' AND SB1.B1_COD <> '"+cProdimp+"' AND "
			cWhereB1C += " SB1.D_E_L_E_T_=' '"
			cWhereB1D += " SB1EXS.B1_GRUPO >= '"+mv_par15+"' AND SB1EXS.B1_GRUPO <= '"+mv_par16+"' AND SB1EXS.B1_COD <> '"+cProdimp+"' AND "
			cWhereB1D += " SB1EXS.D_E_L_E_T_=' '"
			
			cQueryB1A:= Subs(cWhereB1A,2)
			cQueryB1B:= Subs(cWhereB1B,2)
			cQueryB1C:= Subs(cWhereB1C,2)
			cQueryB1D:= Subs(cWhereB1D,2)
			
			cWhereB1A+= "%"
			cWhereB1B+= "%"
			cWhereB1C+= "%"
			cWhereB1D+= "%"
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ So inclui as condicoes a seguir qdo lista produtos sem ³
			//³ movimento                                              ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			cQueryD1 := " FROM "
			cQueryD1 += RetSqlName("SB1") + " SB1"
			cQueryD1 += (", " + RetSqlName("SD1")+ " SD1 ")
			cQueryD1 += (", " + RetSqlName("SF4")+ " SF4 ")
			cQueryD1 += " WHERE SB1.B1_COD = D1_COD"
			If lCusEmp
				If !Empty(xFilial("SD1")) .And. !Empty(xFilial("SF4"))
					cQueryD1 += " AND F4_FILIAL = D1_FILIAL "
				EndIf
			Else
				cQueryD1 += (" AND D1_FILIAL = '" + xFilial("SD1")+"'" )
				cQueryD1 += (" AND F4_FILIAL = '" + xFilial("SF4") + "'")
			EndIf
			cQueryD1 += (" AND SD1.D1_TES = F4_CODIGO AND F4_ESTOQUE = 'S'")
			cQueryD1 += (" AND D1_DTDIGIT >= '" + DTOS(mv_par05) + "'")
			cQueryD1 += (" AND D1_DTDIGIT <= '" + DTOS(mv_par06) + "'")
			cQueryD1 +=  " AND D1_ORIGLAN <> 'LF'"
			If !(lCusFil .Or. lCusEmp)
				cQueryD1 += " AND D1_LOCAL >= '" + mv_par08 + "' AND D1_LOCAL <= '" + mv_par09 + "'"
			EndIf
			cQueryD1 += " AND SD1.D_E_L_E_T_=' ' AND SF4.D_E_L_E_T_=' '"
			
			cQueryD2 := " FROM "
			cQueryD2 += RetSqlName("SB1") + " SB1 , "+ RetSqlName("SD2")+ " SD2 , "+ RetSqlName("SF4")+" SF4 "
			cQueryD2 += " WHERE SB1.B1_COD = D2_COD "
			If lCusEmp
				If !Empty(xFilial("SD2")) .And. !Empty(xFilial("SF4"))
					cQueryD2 += " AND F4_FILIAL = D2_FILIAL "
				EndIf
			Else
				cQueryD2 += " AND D2_FILIAL = '"+xFilial("SD2")+"' "
				cQueryD2 += " AND F4_FILIAL = '"+xFilial("SF4")+"' "
			EndIf
			cQueryD2 += " AND SD2.D2_TES = F4_CODIGO AND F4_ESTOQUE = 'S'"
			cQueryD2 += " AND D2_EMISSAO >= '"+DTOS(mv_par05)+"' AND D2_EMISSAO <= '"+DTOS(mv_par06)+"'"
			cQueryD2 += " AND D2_ORIGLAN <> 'LF'"
			If !(lCusFil .Or. lCusEmp)
				cQueryD2 += " AND D2_LOCAL >= '"+mv_par08+"' AND D2_LOCAL <= '"+mv_par09+"'"
			EndIf
			cQueryD2 += " AND SD2.D_E_L_E_T_=' ' AND SF4.D_E_L_E_T_=' '"
			
			cQueryD3 := " FROM "
			cQueryD3 += RetSqlName("SB1") + " SB1 , "+ RetSqlName("SD3")+ " SD3 "
			cQueryD3 += " WHERE SB1.B1_COD = D3_COD "
			If !lCusEmp
				cQueryD3 += " AND D3_FILIAL = '"+xFilial("SD3")+"' "
			EndIf
			cQueryD3 += " AND D3_EMISSAO >= '"+DTOS(mv_par05)+"' AND D3_EMISSAO <= '"+DTOS(mv_par06)+"'"
			If GetPar('MV_D3ESTOR', .F., 'N') == 'N'
				cQueryD3 += " AND D3_ESTORNO <> 'S'"
			EndIf
			If GetPar('MV_D3SERVI', .F., 'N') == 'N' .And. IntDL()
				cQueryD3 += " AND ( (D3_SERVIC = '   ') OR (D3_SERVIC <> '   ' AND D3_TM <= '500')  "
				cQueryD3 += " OR  (D3_SERVIC <> '   ' AND D3_TM > '500' AND D3_LOCAL ='"+GetPar('MV_CQ', .F., '98')+"') )"
			EndIf
			If !(lCusFil .Or. lCusEmp) .And. !lLocProc
				cQueryD3 += " AND D3_LOCAL >= '"+mv_par08+"' AND D3_LOCAL <= '"+mv_par09+"'"
			EndIf
			cQueryD3 += " AND SD3.D_E_L_E_T_=' '"
			
			cQuerySub:= "SELECT 1 "
			
			If mv_par07 == 1
				cQuery2 := " AND NOT EXISTS (" + cQuerySub + cQueryD1
				cQuery2 += cQueryB1B
				cQuery2 += " AND "
				cQuery2 += cQueryB1C
				cQuery2 += ") AND NOT EXISTS ("
				cQuery2 += cQuerySub + cQueryD2
				cQuery2 += cQueryB1B
				cQuery2 += " AND "
				cQuery2 += cQueryB1C
				cQuery2 += ") AND NOT EXISTS ("
				cQuery2 += cQuerySub + cQueryD3
				cQuery2 += cQueryB1B
				cQuery2 += " AND "
				cQuery2 += cQueryB1C + ")"
				
				cUnion := "%"
				cUnion += " UNION SELECT 'SB1'"		// 01
				cUnion += ", SB1EXS.B1_COD"			// 02
				cUnion += ", SB1EXS.B1_TIPO"		// 03
				cUnion += ", SB1EXS.B1_UM"			// 04
				cUnion += ", SB1EXS.B1_GRUPO"		// 05
				cUnion += ", SB1EXS.B1_DESC"		// 06
				cUnion += ", SB1EXS.B1_POSIPI"		// 07
				cUnion += ", ''"					// 08
				cUnion += ", ''"					// 09
				cUnion += ", ''"					// 10
				cUnion += ", ''"					// 11
				cUnion += ", ''"					// 12
				cUnion += ", ''"					// 13
				cUnion += ", ''"					// 14
				cUnion += ", 0"						// 15
				cUnion += ", 0"						// 16
				cUnion += ", SB2.B2_LOCAL"			// 17
				cUnion += ", ''"					// 18
				cUnion += ", ''"					// 19
				cUnion += ", ''"					// 20
				cUnion += ", ''"					// 21
				cUnion += ", ''"					// 22
				cUnion += ", ''"					// 23
				cUnion += ", ''"					// 24
				cUnion += ", 0"						// 25
				cUnion += ", ''"					// 26
				cUnion += ", ''"					// 27
				If lVEIC
					cUnion += ", SB1EXS.B1_CODITE CODITE"	// 28
				EndIf
				//cUnion += ", 0"						// 29
				//cUnion += " FROM "+RetSqlName("SB1") + " SB1EXS WHERE"
				//cUnion += cQueryB1D
				//cUnion += cQuery2
				//cUnion += "%"
				
				cUnion += ", 0"						// 29
				cUnion += ", ''"						// 30
				cUnion += " FROM "+RetSqlName("SB1") + " SB1EXS
				
				cUnion += " INNER JOIN " + RetSqlName("SB2") + " SB2
				cUnion += " ON B2_FILIAL = '" + xFilial("SB2")+ "' "
				cUnion += "    AND B2_COD = B1_COD
				cUnion += "    AND SB2.D_E_L_E_T_ = ''
				
				cUnion += " WHERE"
				cUnion += cQueryB1D
				cUnion += cQuery2
				cUnion += "%"
			EndIf
			
			cOrder := "%"
			If ! lVEIC
				If nOrdem == 1 //" Codigo Produto "###" Tipo do Produto"
					cOrder += " 2,"
				ElseIf nOrdem == 2
					cOrder += " 3,2,"
				EndIf
			Else
				If nOrdem ==1 //" Codigo Produto "###" Tipo do Produto"
					cOrder += " 28, 2, 5," 	// B1_CODITE, B1_COD, B1_GRUPO
				ElseIf nOrdem == 2
					cOrder += " 3, 28, 2, 5," // B1_TIPO, B1_CODITE, B1_COD, B1_GRUPO
				EndIf
			EndIf
			
			If mv_par12 == 1
				//					cOrder += "17,12"+IIf(lVEIC,',29',',28')
				cOrder += "12"+IIf(lVEIC,',29',',28')
			Else
				If lCusFil .Or. lCusEmp .Or. MV_PAR08 <> MV_PAR09
					cOrder += "8,12"+IIf(lVEIC,',29',',28')
				Else
					//						cOrder += "17,8,12"+IIf(lVEIC,',29',',28')
					cOrder += "8"+IIf(lVEIC,',29',',28')
				EndIf
			EndIf
			//cOrder += "%"
      //// Ordem de impressão (Produto - Data - TES)
      cOrder := "%2,9,10%"

			BeginSql Alias cAliasTop
				
				SELECT 	'SD1' ARQ,      //-- 01 ARQ
				SB1.B1_COD PRODUTO,     //-- 02 PRODUTO
				SB1.B1_TIPO TIPO,       //-- 03 TIPO
				SB1.B1_UM,              //-- 04 UM
				SB1.B1_GRUPO,      	    //-- 05 GRUPO
				SB1.B1_DESC,            //-- 06 DESCR
				SB1.B1_POSIPI,          //-- 07 
				D1_SEQCALC SEQCALC,     //-- 08 SEQUENCIA DE CALCULO
				D1_DTDIGIT DATA,        //-- 09 DATA
				D1_TES TES,             //-- 10 TES
				D1_CF CF,               //-- 11 CF
				D1_NUMSEQ SEQUENCIA,	  //-- 12 SEQUENCIA
				D1_DOC DOCUMENTO,       //-- 13 DOCUMENTO
				D1_SERIE SERIE,         //-- 14 SERIE
				D1_QUANT QUANTIDADE,    //-- 15 QUANTIDADE
				D1_QTSEGUM QUANT2UM,    //-- 16 QUANT2UM
				D1_LOCAL ARMAZEM,       //-- 17 ARMAZEM
				' ' PROJETO,            //-- 18 PROJETO
				' ' OP,                 //-- 19 OP
				' ' CC,                 //-- 20 OP
				D1_FORNECE FORNECEDOR,  //-- 21 FORNECEDOR
				D1_LOJA LOJA,           //-- 22 LOJA
				' ' PEDIDO,             //-- 23 PEDIDO
				D1_TIPO TIPONF,         //-- 24 TIPO NF
				%Exp:cSelectD1%         //-- 25 CUSTO
				' ' TRT,                //-- 26 TRT
				D1_LOTECTL LOTE 	   	  //-- 27 LOTE
				%Exp:cSelectVe%       	//-- 28 CODITE
				SD1.R_E_C_N_O_ NRECNO,  //-- 29 RECNO
				SF4.F4_TIPO TPTES
				
				FROM %table:SB1% SB1,%table:SD1% SD1,%table:SF4% SF4
				
				WHERE SB1.B1_COD     =  SD1.D1_COD		AND  	%Exp:cWhereD1C%
				SD1.D1_TES     =  SF4.F4_CODIGO	AND
				SF4.F4_ESTOQUE =  'S'				AND 	SD1.D1_DTDIGIT >= %Exp:mv_par05%	AND
				SD1.D1_DTDIGIT <= %Exp:mv_par06%	AND		SD1.D1_ORIGLAN <> 'LF'
				%Exp:cWhereD1%
				SD1.%NotDel%						AND 	SF4.%NotDel%
				%Exp:cWhereB1A%                   AND
				%Exp:cWhereB1C%
				
				UNION
				
				SELECT 'SD2',
				SB1.B1_COD,
				SB1.B1_TIPO,
				SB1.B1_UM,
				SB1.B1_GRUPO,
				SB1.B1_DESC,
				SB1.B1_POSIPI,
				D2_SEQCALC,
				D2_EMISSAO,
				D2_TES,
				D2_CF,
				D2_NUMSEQ,
				D2_DOC,
				D2_SERIE,
				D2_QUANT,
				D2_QTSEGUM,
				D2_LOCAL,
				' ',
				' ',
				' ',
				D2_CLIENTE,
				D2_LOJA,
				D2_PEDIDO,
				D2_TIPO,
				%Exp:cSelectD2%
				' ',
				D2_LOTECTL
				%Exp:cSelectVe%
				SD2.R_E_C_N_O_ SD2RECNO,
				SF4.F4_TIPO
				
				
				FROM %table:SB1% SB1,%table:SD2% SD2,%table:SF4% SF4
				
				WHERE	SB1.B1_COD     =  SD2.D2_COD		AND	%Exp:cWhereD2C%
				SD2.D2_TES     =  SF4.F4_CODIGO		AND
				SF4.F4_ESTOQUE =  'S'				AND	SD2.D2_EMISSAO >= %Exp:mv_par05%	AND
				SD2.D2_EMISSAO <= %Exp:mv_par06%	AND	SD2.D2_ORIGLAN <> 'LF'
				%Exp:cWhereD2%
				SD2.%NotDel%						AND SF4.%NotDel%
				%Exp:cWhereB1A%                     AND
				%Exp:cWhereB1C%
				
				UNION
				
				SELECT 	'SD3',
				SB1.B1_COD,
				SB1.B1_TIPO,
				SB1.B1_UM,
				SB1.B1_GRUPO,
				SB1.B1_DESC,
				SB1.B1_POSIPI,
				D3_SEQCALC,
				D3_EMISSAO,
				D3_TM,
				D3_CF,
				D3_NUMSEQ,
				D3_DOC,
				' ',
				D3_QUANT,
				D3_QTSEGUM,
				D3_LOCAL,
				D3_PROJPMS,
				D3_OP,
				D3_CC,
				' ',
				' ',
				' ',
				' ',
				%Exp:cSelectD3%
				D3_TRT,
				D3_LOTECTL
				%Exp:cSelectVe%
				SD3.R_E_C_N_O_ SD3RECNO,
			  CASE WHEN D3_TM <= '500' THEN 'E' ELSE 'S' END

				
				FROM %table:SB1% SB1,%table:SD3% SD3
				
				WHERE	SB1.B1_COD     =  SD3.D3_COD 		AND %Exp:cWhereD3C%
				SD3.D3_EMISSAO >= %Exp:mv_par05%	AND	SD3.D3_EMISSAO <= %Exp:mv_par06%	AND
				%Exp:cWhereD3%
				SD3.%NotDel%
				
				%Exp:cUnion%
				
				ORDER BY %Exp:cOrder% ///cOrder := "% 2,9,10"
				
			EndSql
			
			//MemoWrite("C:\Temp\FEMATR900.SQL", GetLastQuery()[2]) //TODO: TESTE. COMENTAR APÓS VALIDAÇÕES.
			
			oSection2:SetParentQuery()
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Metodo EndQuery ( Classe TRSection )                                    ³
			//³                                                                        ³
			//³Prepara o relatorio para executar o Embedded SQL.                       ³
			//³                                                                        ³
			//³ExpA1 : Array com os parametros do tipo Range                           ³
			//³                                                                        ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			oReport:Section(1):EndQuery(/*Array com os parametros do tipo Range*/)
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Inicio da impressao do fluxo do relatorio                               ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			dbSelectArea(cAliasTop)
			oReport:SetMeter(nTotRegs)
			
			TcSetField(cAliasTop,DATA ,"D", TamSx3("D1_DTDIGIT")[1], TamSx3("D1_DTDIGIT")[2] )
			
			While !oReport:Cancel() .And. !(cAliasTop)->(Eof())
				
				If oReport:Cancel()
					Exit
				EndIf
				
				
				oReport:IncMeter()
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Executa filtro de usuario - SB1					 ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				
				If !Empty(cFilUsrSB1)
					DbSelectArea("SB1")
					SB1->(dbSetOrder(1))
					SB1->(dbSeek( xFilial("SB1") + (cAliasTop)->PRODUTO))
					If !(&(cFilUsrSB1))
						(cAliasTop)->(dbSkip())
						Loop
					EndIf
				EndIf
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Executa filtro de usuario - SB2					 ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				
				If !Empty(cFilUsrSB2)
					DbSelectArea("SB2")
					SB2->(dbSetOrder(1))
					SB2->(dbSeek( xFilial("SB2") + (cAliasTop)->PRODUTO))
					If !(&(cFilUsrSB2))
						(cAliasTop)->(dbSkip())
						Loop
					EndIf
				EndIf
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Se nao encontrar no arquivo de saldos ,nao lista ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				dbSelectArea("SB2")
				If !dbSeek(xFilial("SB2")+(cAliasTop)->PRODUTO+If(lCusFil .Or. lCusEmp,"",(cAliasTop)->ARMAZEM))
					dbSelectArea(cAliasTop)
					dbSkip()
					Loop
				EndIf
				
				dbSelectArea(cAliasTop)
				cProdAnt  := (cAliasTop)->PRODUTO
				cLocalAnt := alltrim(SB2->B2_LOCAL)
				
				lFirst:=.F.
				
				MR900ImpS1(@aSalAtu,cAliasTop,.T.,lVEIC,lCusFil,lCusEmp,lMultArm,oSection1,oSection2,oReport)
				
				oSection3:Init()
				While !oReport:Cancel() .And. !(cAliasTop)->(Eof()) .And. (cAliasTop)->PRODUTO = cProdAnt //.And. If(lCusFil .Or. lCusEmp .Or. lLocProc,.T.,IIf(alltrim((cAliasTop)->ARQ) <> 'SB1',alltrim((cAliasTop)->ARMAZEM)==cLocalAnt,.T.))
					oReport:IncMeter()
					lContinua := .F.
					lImpSMov  := .F.
					If Alltrim((cAliasTop)->ARQ) $ "SD1/SD2"
						lFirst:=.T.
						SF4->(dbSeek(xFilial("SF4")+(cAliasTop)->TES))
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Despreza Notas Fiscais Lancadas Pelo Modulo do Livro Fiscal  ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Executa ponto de entrada para verificar se considera TES que ³
						//³ NAO ATUALIZA saldos em estoque.                              ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If lIxbConTes .And. SF4->F4_ESTOQUE != "S"
							lTesNEst := ExecBlock("MTAAVLTES",.F.,.F.)
							lTesNEst := If(ValType(lTesNEst) # "L",.F.,lTesNEst)
						EndIf
						If SF4->F4_ESTOQUE != "S" .And. !lTesNEst
							dbSkip()
							Loop
						EndIf
					ElseIf Alltrim((cAliasTop)->ARQ) == "SD3"
						lFirst:=.T.
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Quando movimento ref apropr. indireta, so considera os         ³
						//³ movimentos com destino ao almoxarifado de apropriacao indireta.³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						/* Específico Ferring
						lInverteMov:=.F.
						If alltrim((cAliasTop)->ARMAZEM) != cLocalAnt .Or. lCusFil .Or. lCusEmp
						If !(Substr((cAliasTop)->CF,3,1) == "3")
						If !(lCusFil .Or. lCusEmp)
						dbSkip()
						Loop
						EndIf
						ElseIf lPriApropri
						lInverteMov:=.T.
						EndIf
						EndIf
						*/
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Caso seja uma transferencia de localizacao verifica se lista   ³
						//³ o movimento ou nao                                             ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If mv_par14 == 2 .And. Substr((cAliasTop)->CF,3,1) == "4"
							cNumSeqTr := (cAliasTOP)->(PRODUTO+SEQUENCIA+ARMAZEM)
							aDadosTran:={(cAliasTOP)->TES,(cAliasTOP)->QUANTIDADE,(cAliasTOP)->CUSTO,(cAliasTOP)->QUANT2UM,(cAliasTOP)->TIPO,;
							(cAliasTOP)->DATA,(cAliasTOP)->CF,(cAliasTOP)->SEQUENCIA,(cAliasTOP)->DOCUMENTO,(cAliasTOP)->PRODUTO,;
							(cAliasTOP)->OP,(cAliasTOP)->PROJETO,(cAliasTOP)->CC,alltrim((cAliasTOP)->ARQ)}
							dbSkip()
							If (cAliasTOP)->(PRODUTO+SEQUENCIA+ARMAZEM) == cNumSeqTr
								dbSkip()
								Loop
							Else
								lContinua := .T.
								If !Localiza(aDadosTran[10])
									If lFirst
										oSection3:Cell("dDtMov"):SetValue(STOD(aDadosTran[6]))
										oSection3:Cell("cTES"):SetValue(aDadosTran[1])
										If ( cPaisLoc=="BRA" )
											oSection3:Cell("cCF"):Show()
											If	lInverteMov
												oSection3:Cell("cCF"):SetValue(Substr(aDadosTran[7],1,3)+"*")
											Else
												oSection3:Cell("cCF"):SetValue(aDadosTran[7])
											EndIf
										Else
											oSection3:Cell("cCF"):Hide()
											oSection3:Cell("cCF"):SetValue("   ")
										EndIf
										If mv_par10 $ "Ss"
											oSection3:Cell("cDoc"):SetValue(aDadosTran[8])
										Else
											oSection3:Cell("cDoc"):SetValue(aDadosTran[9])
										Endif
									EndIf
									If aDadosTran[1] <= "500"
										oSection3:Cell("nENTQtd"):Show()
										oSection3:Cell("nENTCus"):Show()
										oSection3:Cell("nCusMov"):Show()
										
										oSection3:Cell("nENTQtd"):SetValue(aDadosTran[2])
										oSection3:Cell("nENTCus"):SetValue(aDadosTran[3])
										oSection3:Cell("nCusMov"):SetValue(aDadosTran[3] / aDadosTran[2])
										
										oSection3:Cell("nSAIQtd"):Hide()
										oSection3:Cell("nSAICus"):Hide()
										oSection3:Cell("nSAIQtd"):SetValue(0)
										oSection3:Cell("nSAICus"):SetValue(0)
										
										aSalAtu[1] += aDadosTran[2]
										aSalAtu[mv_par11+1] += aDadosTran[3]
										aSalAtu[7] += aDadosTran[4]
									Else
										oSection3:Cell("nENTQtd"):Hide()
										oSection3:Cell("nENTCus"):Hide()
										oSection3:Cell("nENTQtd"):SetValue(0)
										oSection3:Cell("nENTCus"):SetValue(0)
										
										oSection3:Cell("nCusMov"):Show()
										oSection3:Cell("nSAIQtd"):Show()
										oSection3:Cell("nSAICus"):Show()
										
										oSection3:Cell("nCusMov"):SetValue(aDadosTran[3] / aDadosTran[2])
										oSection3:Cell("nSAIQtd"):SetValue(aDadosTran[2])
										oSection3:Cell("nSAICus"):SetValue(aDadosTran[3])
										
										aSalAtu[1] -= aDadosTran[2]
										aSalAtu[mv_par11+1] -= aDadosTran[3]
										aSalAtu[7] -= aDadosTran[4]
									EndIf
								Else
									lTransEnd := .F.
								EndIf
							EndIf
						EndIf
					EndIf
					If lFirst .And. !lContinua .And. lTransEnd
						oSection3:Cell("dDtMov"):SetValue(STOD(DATA))
						oSection3:Cell("cTES"):SetValue(TES)
						If ( cPaisLoc=="BRA" )
							oSection3:Cell("cCF"):Show()
							oSection3:Cell("cCF"):SetValue(CF)
							If	lInverteMov
								oSection3:Cell("cCF"):SetValue(Substr(CF,1,3)+"*")
							Else
								oSection3:Cell("cCF"):SetValue(CF)
							EndIf
						Else
							oSection3:Cell("cCF"):Hide()
							oSection3:Cell("cCF"):SetValue("   ")
						EndIf
						If mv_par10 $ "Ss"
							oSection3:Cell("cDoc"):SetValue(SEQUENCIA)
						Else
							oSection3:Cell("cDoc"):SetValue(DOCUMENTO)
						Endif
					EndIf
					
					Do Case
						Case Alltrim((cAliasTop)->ARQ) == "SD1" .And. !lContinua .And. lTransEnd
							lDev:=MTR900Dev("SD1",cAliasTop)
							If (cAliasTOP)->TES <= "500" .And. !lDev
								If (cAliasTOP)->TIPONF != "C"
									oSection3:Cell("nCusMov"):SetValue((cAliasTOP)->CUSTO / (cAliasTOP)->QUANTIDADE)
									oSection3:Cell("nCusMov"):Show()
								Else
									oSection3:Cell("nCusMov"):SetValue(0)
									oSection3:Cell("nCusMov"):Hide()
								EndIf
								
								oSection3:Cell("nENTQtd"):Show()
								oSection3:Cell("nENTCus"):Show()
								
								oSection3:Cell("nENTQtd"):SetValue((cAliasTOP)->QUANTIDADE)
								oSection3:Cell("nENTCus"):SetValue((cAliasTOP)->CUSTO)
								
								oSection3:Cell("nSAIQtd"):Hide()
								oSection3:Cell("nSAICus"):Hide()
								oSection3:Cell("nSAIQtd"):SetValue(0)
								oSection3:Cell("nSAICus"):SetValue(0)
								
								aSalAtu[1] += (cAliasTOP)->QUANTIDADE
								aSalAtu[mv_par11+1] += (cAliasTOP)->CUSTO
								aSalAtu[7] += (cAliasTOP)->QUANT2UM
							Else
								If (cAliasTOP)->TIPONF != "C"
									oSection3:Cell("nCusMov"):SetValue((cAliasTOP)->CUSTO / (cAliasTOP)->QUANTIDADE)
									oSection3:Cell("nCusMov"):Show()
								Else
									oSection3:Cell("nCusMov"):SetValue(0)
									oSection3:Cell("nCusMov"):Hide()
								EndIf
								
								oSection3:Cell("nENTQtd"):Hide()
								oSection3:Cell("nENTCus"):Hide()
								oSection3:Cell("nENTQtd"):SetValue(0)
								oSection3:Cell("nENTCus"):SetValue(0)
								
								oSection3:Cell("nSAIQtd"):Show()
								oSection3:Cell("nSAICus"):Show()
								
								If lDev
									oSection3:Cell("nSAIQtd"):SetValue((cAliasTOP)->QUANTIDADE * -1)
									oSection3:Cell("nSAICus"):SetValue((cAliasTOP)->CUSTO * -1)
									
									aSalAtu[1] += (cAliasTOP)->QUANTIDADE
									aSalAtu[mv_par11+1] += (cAliasTOP)->CUSTO
									aSalAtu[7] += (cAliasTOP)->QUANT2UM
								Else
									oSection3:Cell("nSAIQtd"):SetValue((cAliasTOP)->QUANTIDADE)
									oSection3:Cell("nSAICus"):SetValue((cAliasTOP)->CUSTO)
									
									aSalAtu[1] 			-= (cAliasTOP)->QUANTIDADE
									aSalAtu[mv_par11+1]	-= (cAliasTOP)->CUSTO
									aSalAtu[7]			-= (cAliasTOP)->QUANT2UM
								EndIf
							EndIf
						Case Alltrim((cAliasTop)->ARQ) = "SD2" .And. !lContinua .And. lTransEnd
							lDev:=MTR900Dev("SD2",cAliasTop)
							If (cAliasTOP)->TES <= "500" .Or. lDev
								If lDev
									oSection3:Cell("nENTQtd"):Show()
									oSection3:Cell("nENTCus"):Show()
									
									oSection3:Cell("nENTQtd"):SetValue((cAliasTOP)->QUANTIDADE * -1)
									oSection3:Cell("nENTCus"):SetValue((cAliasTOP)->CUSTO * -1)
									
									aSalAtu[1] 			-= (cAliasTOP)->QUANTIDADE
									aSalAtu[mv_par11+1]	-= (cAliasTOP)->CUSTO
									aSalAtu[7]			-= (cAliasTOP)->QUANT2UM
								Else
									oSection3:Cell("nENTQtd"):Show()
									oSection3:Cell("nENTCus"):Show()
									
									oSection3:Cell("nENTQtd"):SetValue((cAliasTOP)->QUANTIDADE)
									oSection3:Cell("nENTCus"):SetValue((cAliasTOP)->CUSTO)
									
									aSalAtu[1]			+= (cAliasTOP)->QUANTIDADE
									aSalAtu[mv_par11+1]	+= (cAliasTOP)->CUSTO
									aSalAtu[7]			+= (cAliasTOP)->QUANT2UM
								EndIf
								
								If (cAliasTOP)->TIPONF != "C"
									oSection3:Cell("nCusMov"):SetValue((cAliasTOP)->CUSTO / (cAliasTOP)->QUANTIDADE)
									oSection3:Cell("nCusMov"):Show()
								Else
									oSection3:Cell("nCusMov"):SetValue(0)
									oSection3:Cell("nCusMov"):Hide()
								EndIf
								oSection3:Cell("nSAIQtd"):Hide()
								oSection3:Cell("nSAICus"):Hide()
								oSection3:Cell("nSAIQtd"):SetValue(0)
								oSection3:Cell("nSAICus"):SetValue(0)
							Else
								If (cAliasTOP)->TIPONF != "C"
									oSection3:Cell("nCusMov"):SetValue((cAliasTOP)->CUSTO / (cAliasTOP)->QUANTIDADE)
									oSection3:Cell("nCusMov"):Show()
								Else
									oSection3:Cell("nCusMov"):SetValue(0)
									oSection3:Cell("nCusMov"):Hide()
								EndIf
								
								oSection3:Cell("nENTQtd"):Hide()
								oSection3:Cell("nENTCus"):Hide()
								oSection3:Cell("nENTQtd"):SetValue(0)
								oSection3:Cell("nENTCus"):SetValue(0)
								
								oSection3:Cell("nSAIQtd"):Show()
								oSection3:Cell("nSAICus"):Show()
								
								oSection3:Cell("nSAIQtd"):SetValue((cAliasTOP)->QUANTIDADE)
								oSection3:Cell("nSAICus"):SetValue((cAliasTOP)->CUSTO)
								
								aSalAtu[1]			-= (cAliasTOP)->QUANTIDADE
								aSalAtu[mv_par11+1]	-= (cAliasTOP)->CUSTO
								aSalAtu[7]			-= (cAliasTOP)->QUANT2UM
							EndIf
						Case Alltrim((cAliasTop)->ARQ) == "SD3" .And. !lContinua  .And. lTransEnd
							lDev := .F.
							If	lInverteMov
								If (cAliasTOP)->TES > "500"
									oSection3:Cell("nENTQtd"):Show()
									oSection3:Cell("nENTCus"):Show()
									oSection3:Cell("nCusMov"):Show()
									
									oSection3:Cell("nENTQtd"):SetValue((cAliasTOP)->QUANTIDADE)
									oSection3:Cell("nENTCus"):SetValue((cAliasTOP)->CUSTO)
									oSection3:Cell("nCusMov"):SetValue((cAliasTOP)->CUSTO / (cAliasTOP)->QUANTIDADE)
									
									oSection3:Cell("nSAIQtd"):Hide()
									oSection3:Cell("nSAICus"):Hide()
									oSection3:Cell("nSAIQtd"):SetValue(0)
									oSection3:Cell("nSAICus"):SetValue(0)
									
									aSalAtu[1]			+= (cAliasTOP)->QUANTIDADE
									aSalAtu[mv_par11+1]	+= (cAliasTOP)->CUSTO
									aSalAtu[7]			+= (cAliasTOP)->QUANT2UM
								Else
									oSection3:Cell("nENTQtd"):Hide()
									oSection3:Cell("nENTCus"):Hide()
									oSection3:Cell("nENTQtd"):SetValue(0)
									oSection3:Cell("nENTCus"):SetValue(0)
									
									oSection3:Cell("nCusMov"):Show()
									oSection3:Cell("nSAIQtd"):Show()
									oSection3:Cell("nSAICus"):Show()
									
									oSection3:Cell("nCusMov"):SetValue((cAliasTOP)->CUSTO / (cAliasTOP)->QUANTIDADE)
									oSection3:Cell("nSAIQtd"):SetValue((cAliasTOP)->QUANTIDADE)
									oSection3:Cell("nSAICus"):SetValue((cAliasTOP)->CUSTO)
									
									aSalAtu[1]			-= (cAliasTOP)->QUANTIDADE
									aSalAtu[mv_par11+1]	-= (cAliasTOP)->CUSTO
									aSalAtu[7]			-= (cAliasTOP)->QUANT2UM
								EndIf
								If lCusFil .Or. lCusEmp
									lPriApropri:=.F.
								EndIf
							Else
								If (cAliasTOP)->TES <= "500"
									oSection3:Cell("nENTQtd"):Show()
									oSection3:Cell("nENTCus"):Show()
									oSection3:Cell("nCusMov"):Show()
									
									oSection3:Cell("nENTQtd"):SetValue((cAliasTOP)->QUANTIDADE)
									oSection3:Cell("nENTCus"):SetValue((cAliasTOP)->CUSTO)
									oSection3:Cell("nCusMov"):SetValue((cAliasTOP)->CUSTO / (cAliasTOP)->QUANTIDADE)
									
									oSection3:Cell("nSAIQtd"):Hide()
									oSection3:Cell("nSAICus"):Hide()
									oSection3:Cell("nSAIQtd"):SetValue(0)
									oSection3:Cell("nSAICus"):SetValue(0)
									
									aSalAtu[1]			+= (cAliasTOP)->QUANTIDADE
									aSalAtu[mv_par11+1]	+= (cAliasTOP)->CUSTO
									aSalAtu[7]			+= (cAliasTOP)->QUANT2UM
								Else
									oSection3:Cell("nENTQtd"):Hide()
									oSection3:Cell("nENTCus"):Hide()
									oSection3:Cell("nENTQtd"):SetValue(0)
									oSection3:Cell("nENTCus"):SetValue(0)
									
									oSection3:Cell("nCusMov"):Show()
									oSection3:Cell("nSAIQtd"):Show()
									oSection3:Cell("nSAICus"):Show()
									
									oSection3:Cell("nCusMov"):SetValue((cAliasTOP)->CUSTO / (cAliasTOP)->QUANTIDADE)
									oSection3:Cell("nSAIQtd"):SetValue((cAliasTOP)->QUANTIDADE)
									oSection3:Cell("nSAICus"):SetValue((cAliasTOP)->CUSTO)
									
									aSalAtu[1]			-= (cAliasTOP)->QUANTIDADE
									aSalAtu[mv_par11+1]	-= (cAliasTOP)->CUSTO
									aSalAtu[7]			-= (cAliasTOP)->QUANT2UM
								EndIf
								If lCusFil .Or. lCusEmp
									lPriApropri:=.T.
								EndIf
							EndIf
					EndCase
					If lFirst  .And. lTransEnd
						oSection3:Cell("nSALDQtd"):SetValue(aSalAtu[1])
						oSection3:Cell("nSALDCus"):SetValue(aSalAtu[mv_par11+1])
					EndIf
					Do Case
						Case Alltrim((cAliasTop)->ARQ) == "SD3" .And. !lContinua  .And. lTransEnd
							If Empty((cAliasTOP)->OP) .And. Empty((cAliasTOP)->PROJETO)
								oSection3:Cell("cCCPVPJOP"):SetValue('CC'+(cAliasTOP)->CC)
							ElseIf !Empty((cAliasTOP)->PROJETO)
								oSection3:Cell("cCCPVPJOP"):SetValue('PJ'+(cAliasTOP)->PROJETO)
							ElseIf !Empty((cAliasTOP)->OP)
								oSection3:Cell("cCCPVPJOP"):SetValue('OP'+(cAliasTOP)->OP)
							EndIf
						Case Alltrim((cAliasTop)->ARQ) == "SD1" .And. !lContinua .And. lTransEnd
							cTipoNf := 'F-'
							SD1->(dbGoTo((cAliasTop)->NRECNO))
							SD2->(dbSetOrder(3))
							If SD2->(dbSeek(xFilial("SD2")+SD1->D1_NFORI+SD1->D1_SERIORI+SD1->D1_FORNECE+SD1->D1_LOJA))
								If SD2->D2_TIPO <> 'B'
									cTipoNf := 'C-'
								EndIf
							EndIf
							oSection3:Cell("cCCPVPJOP"):SetValue(cTipoNf+(cAliasTOP)->FORNECEDOR)
						Case Alltrim((cAliasTop)->ARQ) == "SD2" .And. !lContinua .And. lTransEnd
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³N - QNC: 002117                                                       ³
							//³Corrigida a ultima coluna do relatorio onde apresentava nas notas     ³
							//³de saida o número do pedido de compra , ao invés de apresentar        ³
							//³o codigo do cliente quando o D2_TIPO="N",                             ³
							//³quando D2_TIPO="B" mostrar o codigo do fornecedor.                    ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If ((cAliasTop)->TIPONF) $ "B|D"
								oSection3:Cell("cCCPVPJOP"):SetValue('F-'+(cAliasTop)->FORNECEDOR)
							Else
								oSection3:Cell("cCCPVPJOP"):SetValue('C-'+(cAliasTop)->FORNECEDOR)
							EndIf
						Case lContinua .And. aDadosTran[14] == "SD3" .And. lTransEnd
							If Empty(aDadosTran[11]) .And. Empty(aDadosTran[12])
								oSection3:Cell("cCCPVPJOP"):SetValue('CC'+aDadosTran[13])
							ElseIf !Empty(aDadosTran[12])
								oSection3:Cell("cCCPVPJOP"):SetValue('PJ'+aDadosTran[12])
							ElseIf !Empty(aDadosTran[11])
								oSection3:Cell("cCCPVPJOP"):SetValue('OP'+aDadosTran[11])
							EndIf
					EndCase
					
					If lFirst .And. lTransEnd
						oSection3:PrintLine()
					Endif
					lTransEnd := .T.
					
					If !lInverteMov .Or. (lInverteMov .And. lPriApropri)
						If !lContinua //Acerto para utilizar o Array aDadosTranf[]
							dbSkip()
						EndIf
					EndIf
				EndDo
				
				// Específico Ferring:
				nTotSaldQtd += aSalAtu[1]
				nTotSaldCus += aSalAtu[mv_par11+1]
				
				If lFirst
					oReport:PrintText(STR0022+TransForm(aSalAtu[7],cPicB2Qt2),,oSection3:Cell('nSAICus'):ColPos()) //"QTD. NA SEGUNDA UM: "
				Else
					If !MTR900IsMNT()
						oReport:PrintText(STR0023)	//"NAO HOUVE MOVIMENTACAO PARA ESTE PRODUTO"
						oReport:ThinLine()
						lImpSMov := .T.
					Else
						If FindFunction("NGProdMNT")
							aProdsMNT := aClone(NGProdMNT())
							If aScan(aProdsMNT, {|x| AllTrim(x) == AllTrim(SB1->B1_COD) }) == 0
								oReport:PrintText(STR0023)	//"NAO HOUVE MOVIMENTACAO PARA ESTE PRODUTO"
								oReport:ThinLine()
								lImpSMov := .T.
							EndIf
						ElseIf SB1->B1_COD <> cProdMNT .And. SB1->B1_COD <> cProdTER
							oReport:PrintText(STR0023)	//"NAO HOUVE MOVIMENTACAO PARA ESTE PRODUTO"
							oReport:ThinLine()
							lImpSMov := .T.
						EndIf
					EndIf
				EndIf
				
				oSection1:Finish()
				oSection2:Finish()
				If !lImpSMov
					oSection3:Finish()
				Endif
			EndDo
			dbSelectArea(cAliasTop)
			
			// Efetuo o cálculo manual dos saldos, pois a TRFunction destas colunas utiliza
			// a função ONPRINT para cálculo e portanto no totalizados geral da página ele
			// exibe por padrão o valor da últimas linhas ao invés da soma total.
			oReport:GetFunction("TSALQTD"):cFunction := "SUM" // Altero a função, pois se deixar como ONPRINT a classe não respeita o valor informado
			oReport:GetFunction("TSALQTD"):uReport := nTotSaldQtd //(oReport:GetFunction("TENTQTD"):GetValue() - oReport:GetFunction("TSAIQTD"):GetValue() )
			oReport:GetFunction("TSALCUS"):cFunction := "SUM"
			oReport:GetFunction("TSALCUS"):uReport := nTotSaldCus //(oReport:GetFunction("TENTCUS"):GetValue() - oReport:GetFunction("TSAICUS"):GetValue() )
		EndIf
		
		If Select(cAliasTop)>0
			dbSelectArea(cAliasTop)
			dbCloseArea()
		Endif
		
	Next nForFilial
	
EndIf

// Restaura Filial Corrente
cFilAnt := cFilBack

Return NIL

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ MTR900Dev³ Autor ³ Rodrigo de A. Sartorio³ Data ³ 17/07/98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Avalia se item pertence a uma nota de devolu‡ao             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ MTR900Dev(ExpC1,ExpC2)				                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Alias                                              ³±±
±±³          ³ ExpC2 = Alias Top                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ .T. / .F.                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FEMATR900                                                  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function MTR900Dev(cAlias,cAliasTop)
Static lListaDev := NIL

Local lRet:=.F.
Local cSeek:= If(!Empty(cAliasTop),(cAliasTop)->DOCUMENTO+(cAliasTop)->SERIE+(cAliasTop)->FORNECEDOR+(cAliasTop)->LOJA,"")

// Identifica se lista dev. na mesma coluna
lListaDev := If(ValType(lListaDev)#"L",GetPar("MV_LISTDEV"),lListaDev)

If lListaDev .And. cAlias == "SD1"
	dbSelectArea("SF1")
	If Empty(cSeek)
		cSeek:=SD1->D1_DOC+SD1->D1_SERIE+SD1->D1_FORNECE+SD1->D1_LOJA
	EndIf
	If dbSeek(xFilial("SF1") + cSeek) .And. SF1->F1_TIPO == "D"
		lRet:=.T.
	EndIf
ElseIf lListaDev .And. cAlias == "SD2"
	dbSelectArea("SF2")
	If Empty(cSeek)
		cSeek:=+SD2->D2_DOC+SD2->D2_SERIE+SD2->D2_CLIENTE+SD2->D2_LOJA
	EndIf
	If dbSeek(xFilial("SF2") + cSeek) .And. SF2->F2_TIPO == "D"
		lRet:=.T.
	EndIf
EndIf
dbSelectArea(If(Empty(cAliasTop),cAlias,cAliasTop))
Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³
³ Autor ³ Nereu Humberto Junior ³ Data ³ 25/07/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Imprime a secao 1 e 2 (Dados do produto)                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³MR900ImpS1(@ExpA1,ExpC1,ExpL1,ExpL2,ExpL3,ExpO1,ExpO2,ExpO3)³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpA1 = Array com informacoes do saldo inicial do item     ³±±
±±³          ³   [1] = Saldo inicial em quantidade                        ³±±
±±³          ³   [2] = Saldo inicial em valor                             ³±±
±±³          ³   [3] = Saldo inicial na 2a unidade de medida              ³±±
±±³          ³ ExpC1 = Alias                                              ³±±
±±³          ³ ExpL1 = Top                                                ³±±
±±³          ³ ExpL2 = Veiculo                                            ³±±
±±³          ³ ExpL3 = Custo Unificado                                    ³±±
±±³          ³ ExpO1 = Secao 1                                            ³±±
±±³          ³ ExpO2 = Secao 2                                            ³±±
±±³          ³ ExpO3 = obj Report                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FEMATR900                                                  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function MR900ImpS1(aSalAtu,cAliasTop,lQuery,lVEIC,lCusFil,lCusEmp,lMultArm,oSection1,oSection2,oReport)

Local aArea     := GetArea()
Local nCusMed   := 0
Local i         := 0
Local nIndice   := 0
Local aSalAlmox := {}
Local cSeek     := ""
Local cFilBkp   := cFilAnt
Local cTrbSB2	:= CriaTrab(,.F.)
//Local lVer116   := (VAL(GetVersao(.F.)) == 11 .And. GetRpoRelease() >= "R6" .Or. VAL(GetVersao(.F.))  > 11)

Default lQuery   := .F.
Default cAliasTop:="SB1"
Default lCusFil  := .F.
default lCusEmp  := .F.

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Calcula o Saldo Inicial do Produto             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lMultArm
	aArea:=GetArea()
	aSalAtu  := { 0,0,0,0,0,0,0 }
	dbSelectArea("SB2")
	dbSetOrder(1)
	dbSeek(cSeek:=xFilial("SB2") + If(lQuery,(cAliasTOP)->PRODUTO, SB1->B1_COD))
	While !Eof() .And. B2_FILIAL+B2_COD == cSeek
		If B2_LOCAL >= MV_PAR08 .And. B2_LOCAL <= MV_PAR09
			aSalAlmox := CalcEst(If(lQuery,(cAliasTOP)->PRODUTO,SB1->B1_COD),SB2->B2_LOCAL,mv_par05,,, ( lCusRep .And. mv_par18==2 ) )
			For i:=1 to Len(aSalAtu)
				aSalAtu[i] += aSalAlmox[i]
			Next i
		EndIf
		dbSkip()
	End
	RestArea(aArea)
ElseIf lCusFil
	aArea:=GetArea()
	aSalAtu  := { 0,0,0,0,0,0,0 }
	dbSelectArea("SB2")
	dbSetOrder(1)
	dbSeek(cSeek:=xFilial("SB2") + If(lQuery,(cAliasTOP)->PRODUTO,SB1->B1_COD))
	While !Eof() .And. B2_FILIAL+B2_COD == cSeek
		aSalAlmox := CalcEst(If(lQuery,(cAliasTOP)->PRODUTO,SB1->B1_COD),SB2->B2_LOCAL,mv_par05,,, ( lCusRep .And. mv_par18==2 ) )
		For i:=1 to Len(aSalAtu)
			aSalAtu[i] += aSalAlmox[i]
		Next i
		dbSkip()
	End
	RestArea(aArea)
ElseIf lCusEmp
	aArea:=GetArea()
	aSalAtu  := { 0,0,0,0,0,0,0 }
	dbSelectArea("SB2")
	dbSetOrder(1)
	INDREGUA("SB2",cTrbSB2,"B2_COD+B2_LOCAL",,,STR0019)	//"Selecionando Registros"
	nIndice := RetIndex("SB2")
	#IFNDEF TOP
		dbSetIndex(cTrbSB2+OrdBagExt())
	#ENDIF
	dbSetOrder(nIndice+1)
	dbSeek(cSeek:=If(lQuery,(cAliasTOP)->PRODUTO,SB1->B1_COD))
	While !Eof() .And. SB2->B2_COD == cSeek
		If !Empty(xFilial("SB2"))
			cFilAnt:=SB2->B2_FILIAL
		EndIf
		aSalAlmox := CalcEst(If(lQuery,(cAliasTOP)->PRODUTO,SB1->B1_COD),SB2->B2_LOCAL,mv_par05,,,( lCusRep .And. mv_par18==2 ) )
		For i:=1 to Len(aSalAtu)
			aSalAtu[i] += aSalAlmox[i]
		Next i
		dbSkip()
	End
	dbSelectArea("SB2")
	If !Empty(cTrbSB2) .And. File(cTrbSB2 + OrdBagExt())
		RetIndex("SB2")
		Ferase(cTrbSB2+OrdBagExt())
	EndIf
	cFilAnt := cFilBkp
	RestArea(aArea)
Else
	aSalAtu := CalcEst(If(lQuery,(cAliasTOP)->PRODUTO,SB1->B1_COD),(cAliasTOP)->ARMAZEM,mv_par05,,, ( lCusRep .And. mv_par18==2 ) )
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Calcula o Custo de Reposicao do Produto        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lCusRep .And. mv_par1==2
	aSalAtu := {aSalAtu[1],aSalAtu[18],aSalAtu[19],aSalAtu[20],aSalAtu[21],aSalAtu[22],aSalAtu[07]}
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Calcula o Custo Medio do Produto               ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
SB2->(dbSetOrder(1))
SB2->(dbSeek(xFilial("SB2") + If(lQuery,(cAliasTOP)->PRODUTO,SB1->B1_COD)))
If aSalAtu[1] > 0
	nCusmed := aSalAtu[mv_par11+1]/aSalAtu[1]
ElseIf aSalAtu[1] == 0 .and. aSalAtu[mv_par11+1] == 0
	nCusMed := 0
Else
	nCusmed := &(Eval(bBloco,"SB2->B2_CM",mv_par11))
EndIf

dbSelectArea("SB2")
dbSeek(xFilial("SB2")+(cAliasTop)->PRODUTO+If(lCusFil .Or. lCusEmp,"",(cAliasTop)->ARMAZEM))

oSection1:Init()
oSection2:Init()

oSection1:Cell("nCusMed"):SetValue(nCusMed)
oSection1:Cell("nQtdSal"):SetValue(aSalAtu[1])
oSection1:Cell("nVlrSal"):SetValue(aSalAtu[mv_par11+1])

oSection1:Cell("cProduto"	):SetValue((cAliasTop)->PRODUTO)
oSection1:Cell("cTipo"		):SetValue((cAliasTop)->TIPO)
If lVEIC
	oSection2:Cell("cProduto"	):SetValue((cAliasTop)->PRODUTO)
	oSection2:Cell("cTipo"		):SetValue((cAliasTop)->TIPO)
Endif
//oSection2:Cell("cArmazem"	):SetValue((cAliasTop)->ARMAZEM)
oSection2:Cell("cArmazem"	):SetValue(MV_PAR08 + " até " + MV_PAR09)
/*
If lVer116
oSection2:Cell("cArmazem"	):SetValue(If(lCusFil .Or. lCusEmp , MV_PAR08 , Posicione("NNR",1,xFilial("NNR")+(cAliasTop)->ARMAZEM,"NNR_DESCRI")))
Else
oSection2:Cell("cArmazem"	):SetValue(If(lCusFil .Or. lCusEmp , MV_PAR08 , SB2->B2_LOCALIZ))
EndIf
*/
oSection1:PrintLine()
oSection2:PrintLine()

RestArea(aArea)

RETURN

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³MTR900IsMNT³ Autor ³ Lucas                ³ Data ³ 03.10.06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Verifica se ha integração com o modulo SigaMNT/NG          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ FEMATR900                                                  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function MTR900IsMNT()
Local aArea
Local aAreaSB1
Local aProdsMNT := {}
Local cProdMNT	 := ""
Local nX := 0
Local lIntegrMNT := .F.

//Esta funcao encontra-se no modulo Manutencao de Ativos (NGUTIL05.PRX), e retorna os produtos (pode ser MAIS de UM), dos parametros de
//Manutencao - "M" (MV_PRODMNT) / Terceiro - "T" (MV_PRODTER) / ou Ambos - "*" ou em branco
If FindFunction("NGProdMNT")
	aProdsMNT := aClone(NGProdMNT("M"))
	If Len(aProdsMNT) > 0
		aArea	 := GetArea()
		aAreaSB1 := SB1->(GetArea())
		
		SB1->(dbSelectArea( "SB1" ))
		SB1->(dbSetOrder(1))
		For nX := 1 To Len(aProdsMNT)
			If SB1->(dbSeek( xFilial("SB1") + aProdsMNT[nX] ))
				lIntegrMNT := .T.
				Exit
			EndIf
		Next nX
		
		RestArea(aAreaSB1)
		RestArea(aArea)
	EndIf
Else //Se a funcao nao existir, processa com o parametro aceitando 1 (UM) Produto
	cProdMNT := GetPar("MV_PRODMNT")
	cProdMNT := cProdMNT + Space(15-Len(cProdMNT))
	If !Empty(cProdMNT)
		aArea	 := GetArea()
		aAreaSB1 := SB1->(GetArea())
		SB1->(dbSelectArea( "SB1" ))
		SB1->(dbSetOrder(1))
		If SB1->(dbSeek( xFilial('SB1') + cProdMNT ))
			lIntegrMNT := .T.
		EndIf
		RestArea(aAreaSB1)
		RestArea(aArea)
	EndIf
EndIf
Return( lIntegrMNT )


Static Function GetPar(cpar)
return(getmv(cpar))
