#INCLUDE "PROTHEUS.CH"
#INCLUDE "TBICONN.CH"

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ FEFINR03 º Autor ³ Wilson A. Silva Jr.º Data ³  23/04/2019 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Relatorio de Acessos e Permissoes por Usuarios.			  º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
User Function FEFINR03()

Local aArea 	:= GetArea()
Local aBoxParam := {}
Local aRetParam := {}
Local aCampos 	:= {}

Private oReport

Private cTmpGrp 	:= CriaTrab(,.F.)
Private cTmpUsr 	:= CriaTrab(,.F.)
Private cTmpXNU 	:= CriaTrab(,.F.)

Private aModulo := RetModName()

Private nAnalise := 1
Private nTipoImp := 1 // 1=Excel ou 2=PDF
Private cUsrIni  := Space(6)
Private cUsrFim  := Replicate("Z",6)
Private cGrpIni  := Space(6)
Private cGrpFim  := Replicate("Z",6)
Private cStatus  := "Ativos"
Private lImpOper := .T.
 
If MsgYesNo( "Este programa ir agerar um arquivo Excel contendo a lista dos programas disponiveis nos menus. Deseja Prosseguir?", "Auditoria em Menus" )

	AADD( aBoxParam, {3,"Análise"		,nAnalise					,{"Por Usuário","Por Grupo"},100,".T.",.F.} )
	AADD( aBoxParam, {3,"Impressão"		,nTipoImp					,{"Excel","PDF"},100,".T.",.F.} )
	AADD( aBoxParam, {1,"Usuário De"	,cUsrIni					,"","","USR",".T.",100,.F.} )
	AADD( aBoxParam, {1,"Usuário Até"	,cUsrFim					,"","","USR",".T.",100,.F.} )
	AADD( aBoxParam, {1,"Grupo De"		,cGrpIni					,"","","GRP",".T.",100,.F.} )
	AADD( aBoxParam, {1,"Grupo Até"		,cGrpFim					,"","","GRP",".T.",100,.F.} )
	AADD( aBoxParam, {2,"Status"		,cStatus					,{"Todos","Ativos","Bloqueados"},100,".T.",.F.} )
	AADD( aBoxParam, {2,"Operação"		,IIf(lImpOper,"Sim","Não")	,{"Sim","Não"},100,".T.",.F.} )

	If ParamBox(aBoxParam,"Informe os Parâmetros",@aRetParam,,,,,,,,.F.)
		
		nAnalise := aRetParam[1]
		nTipoImp := aRetParam[2]
		cUsrIni  := aRetParam[3]
		cUsrFim  := aRetParam[4]
		cGrpIni  := aRetParam[5]
		cGrpFim  := aRetParam[6]
		cStatus  := aRetParam[7]
		lImpOper := aRetParam[8] == "Sim"

		/*==========================================================*/

		aCampos := {}
		AADD(aCampos, {"SY_GRUPO"	,"C", 006, 00}) // Grupo - Grupo de usuários
		AADD(aCampos, {"SY_GRPDES"	,"C", 030, 00}) // Desc. Grupo - Descrição do Grupo
		AADD(aCampos, {"SY_STATUS"	,"C", 009, 00}) // Status - Status: Ativo ou Bloqueado
		AADD(aCampos, {"SY_MENU"	,"C", 050, 00}) // Menu - Menu de acesso do sistema
		AADD(aCampos, {"SY_MODULO"	,"C", 035, 00}) // Módulo - Módulo de acesso do sistema

		DBCreate(cTmpGrp,aCampos,"TOPCONN")
		
		DbUseArea(.T.,"TOPCONN",cTmpGrp,cTmpGrp,.F.,.F.)

		/*==========================================================*/
		
		aCampos := {}
		AADD(aCampos, {"SY_GRUPO"	,"C", 006, 00}) // Grupo - Grupo de usuários
		AADD(aCampos, {"SY_GRPDES"	,"C", 030, 00}) // Desc. Grupo - Descrição do Grupo
		AADD(aCampos, {"SY_LOGIN"	,"C", 025, 00}) // Login - Id de acesso do usuário
		AADD(aCampos, {"SY_NOME"	,"C", 040, 00}) // Nome  - Nome completo do usuário
		AADD(aCampos, {"SY_DEPTO"	,"C", 040, 00}) // Departamento - Departamento do usuário
		AADD(aCampos, {"SY_CARGO"	,"C", 040, 00}) // Cargo - Cargo atual do usuário
		AADD(aCampos, {"SY_EMAIL"	,"C", 040, 00}) // E-mail - E-mail do usuário
		AADD(aCampos, {"SY_STATUS"	,"C", 009, 00}) // Status - Status: Ativo ou Bloqueado
		AADD(aCampos, {"SY_MENU"	,"C", 050, 00}) // Menu - Menu de acesso do sistema
		AADD(aCampos, {"SY_MODULO"	,"C", 035, 00}) // Módulo - Módulo de acesso do sistema

		DBCreate(cTmpUsr,aCampos,"TOPCONN")
		
		DbUseArea(.T.,"TOPCONN",cTmpUsr,cTmpUsr,.F.,.F.)

		/*==========================================================*/

		aCampos := {}
		AADD(aCampos, {"SY_MENU"	,"C", 050, 00}) // Menu - Menu de acesso do sistema
		AADD(aCampos, {"SY_SECAO"	,"C", 035, 00}) // Seção - Seção: Atualizações, Consultas, Relatórios ou Miscelaneas
		AADD(aCampos, {"SY_SUBMENU"	,"C", 035, 00}) // Submenu - Nome da rotina a ser executada
		AADD(aCampos, {"SY_ROTINA"	,"C", 035, 00}) // Descrição - Descrição da rotina
		AADD(aCampos, {"SY_FUNCAO"	,"C", 035, 00}) // Função - Nome técnico da Função
		AADD(aCampos, {"SY_OPERAC"	,"C", 035, 00}) // Operação - Nome da operação. Exemplo: Incluir, Alterar, Excluir, Etc
		AADD(aCampos, {"SY_ORDOPER"	,"C", 009, 00}) // Ordem da Operação

		DBCreate(cTmpXNU,aCampos,"TOPCONN")
		
		DbUseArea(.T.,"TOPCONN",cTmpXNU,cTmpXNU,.F.,.F.)

		/*==========================================================*/

		If nTipoImp == 1 // Excel
			Processa({|| RunReport()},"Processando ..." )
    		If nAnalise == 1
				Processa({|| UsrExcel() },"Gerando o Excel..." )
			Else
				Processa({|| GrpExcel() },"Gerando o Excel..." )
			EndIf
		Else
			oReport := Ljr780RptDef()
			oReport:PrintDialog()
		EndIf

		(cTmpGrp)->(DbCloseArea())
		(cTmpUsr)->(DbCloseArea())
		(cTmpXNU)->(DbCloseArea())

		If !TcDelFile(cTmpGrp)
			MsgInfo("Não foi possível a exclusão da tabela temporária.")
		EndIf
		
		If !TcDelFile(cTmpUsr)
			MsgInfo("Não foi possível a exclusão da tabela temporária.")
		EndIf
		
		If !TcDelFile(cTmpXNU)
			MsgInfo("Não foi possível a exclusão da tabela temporária.")
		EndIf
	EndIf
EndIf

RestArea(aArea)

Return .T.

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³RunReport ºAutor  ³Mauro Paladini      º Data ³  23/02/04   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Funcao auxiliar para processamento do relatorio             º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function RunReport()

	Local cTMP1  	:= GetNextAlias()
	Local cQuery 	:= ""

	Local aMenuAll
	Local aMenuGrp
	Local aBotoes

	Local nX, nY, nZ
    
	Private aUsuario := FwAllUsers()
	Private aGrupos	 := FWSFAllGrps()
	Private nOrdem 	 := 0

    //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Obter lista de todos os menus utilizados pelos grupos ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	ProcRegua(Len(aGrupos))
 
	For nX := 1 To Len(aGrupos)

		IncProc( "Analisando grupo de usuarios" )
		
		cCodGrp  := aGrupos[nX][2]
		cDescGrp := aGrupos[nX][3]

		aGrpParam := FWGrpParam(cCodGrp)

		lBloq 	:= aGrpParam[1][3] == "1" .Or. (!Empty(aGrpParam[1][4]) .And. aGrpParam[1][4] <= DATE())

		//If cCodGrp == "000000"
		//	LOOP
		//EndIf

		If cCodGrp < cGrpIni .Or. cCodGrp > cGrpFim
			LOOP
		EndIf

		If cStatus == "Ativos" .And. lBloq
			LOOP
		EndIf

		If cStatus == "Bloqueados" .And. !lBloq
			LOOP
		EndIf

		aMenuGrp := FWGrpMenu(cCodGrp) // Menus do Grupo
	
		For nZ := 1 To Len(aMenuGrp)
			cCodMod := Substr(aMenuGrp[nZ],1,2)
			lUsado	:= IIf(Substr(aMenuGrp[nZ],3,1)=="X",.F.,.T.)
			cMenu	:= Lower(AllTrim(Capital(AllTrim(Substr(aMenuGrp[nZ],4,Len(aMenuGrp[nZ]))))))
			If lUsado
				If File(cMenu)
                    DbSelectArea(cTmpGrp)
                    RecLock(cTmpGrp,.T.)
                    	REPLACE SY_GRUPO    WITH cCodGrp // Grupo - Grupo de usuários
                        REPLACE SY_GRPDES   WITH cDescGrp // Desc. Grupo - Descrição do Grupo
                        REPLACE SY_STATUS   WITH IIF(lBloq,"Bloqueado","Ativo") // Status - Status: Ativo ou Bloqueado
                        REPLACE SY_MENU     WITH cMenu // Menu - Menu de acesso do sistema
						REPLACE SY_MODULO	WITH ListaModulos(cCodMod) // Módulo - Módulo de acesso do sistema
                    MsUnLock()
				EndIf
			EndIf
		Next nZ
	Next nX

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Obter lista de todos os menus utilizados pelos usuarios ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	ProcRegua(Len(aUsuario))

	For nX := 1 To Len(aUsuario)

		IncProc( "Analisando cadastro de usuarios" )
		
		aDados1 := aUsuario[nX][1]

		cCodUser:= aDados1[1]
		cLogin	:= aDados1[2]
		cNome	:= AllTrim(aDados1[4])
		cDepto	:= AllTrim(aDados1[12])
		cCargo	:= AllTrim(aDados1[13])
		cEMail	:= AllTrim(aDados1[14])
		dDtInc	:= AllTrim(aDados1[24])
		lBloq 	:= aDados1[17]

		If cCodUser == "000000"
			LOOP
		EndIf

		If cCodUser < cUsrIni .Or. cCodUser > cUsrFim
			LOOP
		EndIf

		If cStatus == "Ativos" .And. lBloq // Ativos
			LOOP
		EndIf

		If cStatus == "Bloqueados" .And. !lBloq // Bloqueados
			LOOP
		EndIf

		aDados2 := aUsuario[nX][2]
		aDados3 := aUsuario[nX][3] // Menus
		aDados4 := UsrRetGrp(cCodUser)

		If Len(aDados1[10]) == 0 // Grupos do Usuario

			For nY := 1 To Len(aDados3)
				cCodMod := Substr(aDados3[nY],1,2)
				lUsado	:= IIf(Substr(aDados3[nY],3,1)=="X",.F.,.T.)
				cMenu	:= Lower(AllTrim(Capital(AllTrim(Substr(aDados3[nY],4,Len(aDados3[nY]))))))
				If lUsado
					If File(cMenu)
                        DbSelectArea(cTmpUsr)
                        RecLock(cTmpUsr,.T.)
                            REPLACE SY_GRUPO    WITH "" // Grupo - Grupo de usuários
                            REPLACE SY_GRPDES   WITH "" // Desc. Grupo - Descrição do Grupo
                            REPLACE SY_LOGIN    WITH cLogin // Login - Id de acesso do usuário
                            REPLACE SY_NOME     WITH cNome // Nome  - Nome completo do usuário
                            REPLACE SY_DEPTO    WITH cDepto // Departamento - Departamento do usuário
                            REPLACE SY_CARGO    WITH cCargo // Cargo - Cargo atual do usuário
                            REPLACE SY_EMAIL    WITH cEMail // E-mail - E-mail do usuário
                            REPLACE SY_STATUS   WITH IIF(lBloq,"Bloqueado","Ativo") // Status - Status: Ativo ou Bloqueado
                            REPLACE SY_MENU     WITH cMenu // Menu - Menu de acesso do sistema
							REPLACE SY_MODULO	WITH ListaModulos(cCodMod) // Módulo - Módulo de acesso do sistema
                        MsUnLock()
					EndIf
				EndIf
			Next nY
		Else
			For nY := 1 to Len(aDados4)
				aMenuGrp := FWGrpMenu(aDados4[nY]) // Menus do Grupo
				For nZ := 1 To Len(aMenuGrp)
					cCodMod := Substr(aMenuGrp[nZ],1,2)
					lUsado	:= IIf(Substr(aMenuGrp[nZ],3,1)=="X",.F.,.T.)
					cMenu	:= Lower(AllTrim(Capital(AllTrim(Substr(aMenuGrp[nZ],4,Len(aMenuGrp[nZ]))))))
					If lUsado
						If File(cMenu)
                            DbSelectArea(cTmpUsr)
                            RecLock(cTmpUsr,.T.)
                                REPLACE SY_GRUPO    WITH aDados4[nY] // Grupo - Grupo de usuários
                                REPLACE SY_GRPDES   WITH GrpRetName(aDados4[nY]) // Desc. Grupo - Descrição do Grupo
                                REPLACE SY_LOGIN    WITH cLogin // Login - Id de acesso do usuário
                                REPLACE SY_NOME     WITH cNome // Nome  - Nome completo do usuário
                                REPLACE SY_DEPTO    WITH cDepto // Departamento - Departamento do usuário
                                REPLACE SY_CARGO    WITH cCargo // Cargo - Cargo atual do usuário
                                REPLACE SY_EMAIL    WITH cEMail // E-mail - E-mail do usuário
                                REPLACE SY_STATUS   WITH IIF(lBloq,"Bloqueado","Ativo") // Status - Status: Ativo ou Bloqueado
                                REPLACE SY_MENU     WITH cMenu // Menu - Menu de acesso do sistema
								REPLACE SY_MODULO	WITH ListaModulos(cCodMod) // Módulo - Módulo de acesso do sistema
                            MsUnLock()
						EndIf
					EndIf
				Next nZ
			Next nY
		EndIf

	Next nX

    cDirPath := GetSrvProfString("StartPath", "\system\")

    aMenuAll := Directory(cDirPath + "*.XNU", "D",Nil,.F.,1)

	ProcRegua(Len(aMenuAll))
	
	For nX := 1 To Len(aMenuAll)

        cArqMenu := Lower(cDirPath + AllTrim(aMenuAll[nX][1]))

		IncProc( "Lendo " + cArqMenu )

        If nAnalise == 1
            cQuery := " SELECT COUNT(1) SY_NUMREG FROM "+cTmpUsr+" USR (NOLOCK) WHERE SY_MENU = '"+cArqMenu+"' "
        Else
            cQuery := " SELECT COUNT(1) SY_NUMREG FROM "+cTmpGrp+" GRP (NOLOCK) WHERE SY_MENU = '"+cArqMenu+"' "
		EndIf

        DbUseArea(.T.,"TOPCONN",TCGENQRY(,,cQuery),cTMP1,.F.,.T.)
		
		If (cTMP1)->(EOF()) .Or. (cTMP1)->SY_NUMREG == 0
            (cTMP1)->(DbCloseArea())
            LOOP
        EndIf

        (cTMP1)->(DbCloseArea())

		aEstrutura := XNULoad(cArqMenu)
		nOrdem := 0

		For nY := 1 To Len(aEstrutura)

			DO CASE
				CASE SubStr(UPPER(StrTran(aEstrutura[nY][1][1],"&")),1,4) == "ATUA"
					cTipo := "Atualizacoes"
				CASE SubStr(UPPER(StrTran(aEstrutura[nY][1][1],"&")),1,4) == "CONS"
					cTipo := "Consultas"
				CASE SubStr(UPPER(StrTran(aEstrutura[nY][1][1],"&")),1,4) == "RELA"
					cTipo := "Relatorios"
				CASE SubStr(UPPER(StrTran(aEstrutura[nY][1][1],"&")),1,4) == "MISC"
					cTipo := "Miscelaneas"
			ENDCASE
			
			XBuscFunc(aEstrutura[nY], cTipo)
		Next nY
	Next nX

Return .T.

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³UsrExcel ºAutor  ³Mauro Paladini      º Data ³  23/02/04   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Funcao auxiliar para processamento do relatorio             º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function UsrExcel()

	Local oExcel 		:= FWMSEXCEL():New()
	Local cPathExcel	:= GetTempPath(.T.)
    Local cTMP1         := GetNextAlias()
	Local cDirDocs    	:= MsDocPath()

	Local aLinha

	Local nX
	Local nY
	Local a

	oExcel:AddworkSheet("Lista Usuarios")
	
	oExcel:AddTable ("Lista Usuarios","Lista Usuarios")
	
	oExcel:AddColumn("Lista Usuarios","Lista Usuarios","Grupo"		,1,1) // Grupo - Grupo de usuários
	oExcel:AddColumn("Lista Usuarios","Lista Usuarios","Desc. Grupo",1,1) // Desc. Grupo - Descrição do Grupo
	oExcel:AddColumn("Lista Usuarios","Lista Usuarios","Login"		,1,1) // Login - Id de acesso do usuário
	oExcel:AddColumn("Lista Usuarios","Lista Usuarios","Nome"		,1,1) // Nome  - Nome completo do usuário
	oExcel:AddColumn("Lista Usuarios","Lista Usuarios","Departamento",1,1) // Departamento - Departamento do usuário
	oExcel:AddColumn("Lista Usuarios","Lista Usuarios","Cargo"		,1,1) // Cargo - Cargo atual do usuário
	oExcel:AddColumn("Lista Usuarios","Lista Usuarios","E-mail"		,1,1) // E-mail - E-mail do usuário
	oExcel:AddColumn("Lista Usuarios","Lista Usuarios","Status"		,1,1) // Status - Status: Ativo ou Bloqueado
	oExcel:AddColumn("Lista Usuarios","Lista Usuarios","Menu"		,1,1) // Menu - Menu de acesso do sistema
	oExcel:AddColumn("Lista Usuarios","Lista Usuarios","Módulo"		,1,1) // Módulo - Módulo de acesso do sistema
	oExcel:AddColumn("Lista Usuarios","Lista Usuarios","Seção"		,1,1) // Seção - Seção: Atualizações, Consultas, Relatórios ou Miscelaneas
	oExcel:AddColumn("Lista Usuarios","Lista Usuarios","Submenu"	,1,1) // Submenu - Nome da rotina a ser executada
	oExcel:AddColumn("Lista Usuarios","Lista Usuarios","Descrição"	,1,1) // Descrição - Descrição da rotina
	oExcel:AddColumn("Lista Usuarios","Lista Usuarios","Função"		,1,1) // Função - Nome técnico da Função

	If lImpOper
		oExcel:AddColumn("Lista Usuarios","Lista Usuarios","Operação"	,1,1) // Operação - Nome da operação. Exemplo: Incluir, Alterar, Excluir, Etc
	EndIf

    cQuery := " SELECT DISTINCT "+ CRLF		
    cQuery += "     USR.SY_GRUPO, "+ CRLF 	// Grupo - Grupo de usuários
	cQuery += "     USR.SY_GRPDES, "+ CRLF 	// Desc. Grupo - Descrição do Grupo
	cQuery += "     USR.SY_LOGIN, "+ CRLF 	// Login - Id de acesso do usuário
	cQuery += "     USR.SY_NOME, "+ CRLF 	// Nome  - Nome completo do usuário
	cQuery += "     USR.SY_DEPTO, "+ CRLF 	// Departamento - Departamento do usuário
	cQuery += "     USR.SY_CARGO, "+ CRLF 	// Cargo - Cargo atual do usuário
	cQuery += "     USR.SY_EMAIL, "+ CRLF 	// E-mail - E-mail do usuário
	cQuery += "     USR.SY_STATUS, "+ CRLF 	// Status - Status: Ativo ou Bloqueado
	cQuery += "     USR.SY_MENU, "+ CRLF 	// Menu - Menu de acesso do sistema
	cQuery += "     USR.SY_MODULO, "+ CRLF 	// Módulo - Módulo de acesso do sistema
	cQuery += "     XNU.SY_SECAO, "+ CRLF	// Seção - Seção: Atualizações, Consultas, Relatórios ou Miscelaneas
	cQuery += "     XNU.SY_SUBMENU, "+ CRLF // Submenu - Nome da rotina a ser executada
	cQuery += "     XNU.SY_ROTINA, "+ CRLF 	// Descrição - Descrição da rotina
	cQuery += "     XNU.SY_FUNCAO, "+ CRLF 	// Função - Nome técnico da Função
	cQuery += "     XNU.SY_ORDOPER "+ CRLF 	// Ordem da Operação
    If lImpOper
		cQuery += "     ,XNU.SY_OPERAC "+ CRLF 	// Operação - Nome da operação. Exemplo: Incluir, Alterar, Excluir, Etc
	EndIf
    cQuery += " FROM "+cTmpUsr+" USR (NOLOCK) "+ CRLF
    cQuery += " INNER JOIN "+cTmpXNU+" XNU (NOLOCK) "+ CRLF
    cQuery += "     ON XNU.SY_MENU = USR.SY_MENU "+ CRLF
    cQuery += " ORDER BY "+ CRLF
    cQuery += "     USR.SY_GRUPO, "+ CRLF 	// Grupo - Grupo de usuários
	cQuery += "     USR.SY_GRPDES, "+ CRLF 	// Desc. Grupo - Descrição do Grupo
	cQuery += "     USR.SY_LOGIN, "+ CRLF 	// Login - Id de acesso do usuário
	cQuery += "     USR.SY_MENU, "+ CRLF 	// Menu - Menu de acesso do sistema
	cQuery += "     USR.SY_MODULO, "+ CRLF 	// Módulo - Módulo de acesso do sistema
    cQuery += "     XNU.SY_ORDOPER "+ CRLF 	// Ordem da Operação
	
    DbUseArea(.T.,"TOPCONN",TCGENQRY(,,cQuery),cTMP1,.F.,.T.)
		
	ProcRegua(RecCount())

	DbGoTop()
	
	While (cTMP1)->(!EOF())
		
		IncProc( "Usuario: " + Lower((cTMP1)->SY_LOGIN) )

		aLinha := IIF(lImpOper,Array(15),Array(14))

		aLinha[01] := (cTMP1)->SY_GRUPO 	// Grupo - Grupo de usuários
		aLinha[02] := (cTMP1)->SY_GRPDES 	// Desc. Grupo - Descrição do Grupo
		aLinha[03] := (cTMP1)->SY_LOGIN 	// Login - Id de acesso do usuário
		aLinha[04] := (cTMP1)->SY_NOME 		// Nome  - Nome completo do usuário
		aLinha[05] := (cTMP1)->SY_DEPTO 	// Departamento - Departamento do usuário
		aLinha[06] := (cTMP1)->SY_CARGO 	// Cargo - Cargo atual do usuário
		aLinha[07] := (cTMP1)->SY_EMAIL 	// E-mail - E-mail do usuário
		aLinha[08] := (cTMP1)->SY_STATUS 	// Status - Status: Ativo ou Bloqueado
		aLinha[09] := (cTMP1)->SY_MENU 		// Menu - Menu de acesso do sistema
		aLinha[10] := (cTMP1)->SY_MODULO 	// Módulo - Módulo de acesso do sistema
		aLinha[11] := (cTMP1)->SY_SECAO		// Seção - Seção: Atualizações, Consultas, Relatórios ou Miscelaneas
		aLinha[12] := (cTMP1)->SY_SUBMENU 	// Submenu - Nome da rotina a ser executada
		aLinha[13] := (cTMP1)->SY_ROTINA 	// Descrição - Descrição da rotina
		aLinha[14] := (cTMP1)->SY_FUNCAO 	// Função - Nome técnico da Função

		If lImpOper
			aLinha[15] := (cTMP1)->SY_OPERAC 	// Operação - Nome da operação. Exemplo: Incluir, Alterar, Excluir, Etc
		EndIf

		oExcel:AddRow( "Lista Usuarios", "Lista Usuarios", aLinha )

		(cTMP1)->(DbSkip())
	EndDo
    
    (cTMP1)->(DbCloseArea())

	oExcel:Activate()

	cURLXML := '-'+ALLTRIM(CMONTH(DATE()))+ALLTRIM(STR(DAY(DATE())))+SUBSTR(TIME(), 1, 2)+SUBSTR(TIME(), 4, 2)

	//Cria o arquivo
	oExcel:Activate()
	oExcel:GetXMLFile(cDirDocs+"usuarios"+cURLXML+".xml")

	If __CopyFile(cDirDocs+"usuarios"+cURLXML+".xml",cPathExcel+"usuarios"+cURLXML+".xml")
		FErase(cDirDocs+"usuarios"+cURLXML+".xml")
	EndIf

	If ! ApOleClient( 'MsExcel' )
		MsgAlert( 'MsExcel nao instalado' )
	Else
		oExcelApp := MsExcel():New()
		oExcelApp:WorkBooks:Open( cPathExcel+"usuarios"+cURLXML+".xml") // Abre uma planilha
		oExcelApp:SetVisible(.T.)
	EndIf

Return .T.

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³GrpExcel ºAutor  ³Mauro Paladini      º Data ³  23/02/04   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Funcao auxiliar para processamento do relatorio             º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function GrpExcel()

	Local oExcel 		:= FWMSEXCEL():New()
	Local cPathExcel	:= GetTempPath(.T.)
	Local cDirDocs    	:= MsDocPath()
    Local cTMP1         := GetNextAlias()
    Local cTMP2         := GetNextAlias()

	Local aLinha

	Local nX
	Local nY
	Local a

	oExcel:AddworkSheet("Lista Grupos")
	
	oExcel:AddTable ("Lista Grupos","Lista Grupos")
	
	oExcel:AddColumn("Lista Grupos","Lista Grupos","Grupo"		,1,1) // Grupo - Grupo de usuários
	oExcel:AddColumn("Lista Grupos","Lista Grupos","Desc. Grupo",1,1) // Desc. Grupo - Descrição do Grupo
	oExcel:AddColumn("Lista Grupos","Lista Grupos","Status"		,1,1) // Status - Status: Ativo ou Bloqueado
	oExcel:AddColumn("Lista Grupos","Lista Grupos","Menu"		,1,1) // Menu - Menu de acesso do sistema
	oExcel:AddColumn("Lista Grupos","Lista Grupos","Módulo"		,1,1) // Módulo - Módulo de acesso do sistema
	oExcel:AddColumn("Lista Grupos","Lista Grupos","Seção"		,1,1) // Seção - Seção: Atualizações, Consultas, Relatórios ou Miscelaneas
	oExcel:AddColumn("Lista Grupos","Lista Grupos","Submenu"	,1,1) // Submenu - Nome da rotina a ser executada
	oExcel:AddColumn("Lista Grupos","Lista Grupos","Descrição"	,1,1) // Descrição - Descrição da rotina
	oExcel:AddColumn("Lista Grupos","Lista Grupos","Função"		,1,1) // Função - Nome técnico da Função

	If lImpOper
		oExcel:AddColumn("Lista Grupos","Lista Grupos","Operação"	,1,1) // Operação - Nome da operação. Exemplo: Incluir, Alterar, Excluir, Etc
	EndIf

    cQuery := " SELECT DISTINCT "+ CRLF		
    cQuery += "     GRP.SY_GRUPO, "+ CRLF 	// Grupo - Grupo de usuários
	cQuery += "     GRP.SY_GRPDES, "+ CRLF 	// Desc. Grupo - Descrição do Grupo
	cQuery += "     GRP.SY_STATUS, "+ CRLF 	// Status - Status: Ativo ou Bloqueado
	cQuery += "     GRP.SY_MENU, "+ CRLF 	// Menu - Menu de acesso do sistema
	cQuery += "     GRP.SY_MODULO, "+ CRLF 	// Módulo - Módulo de acesso do sistema
	cQuery += "     XNU.SY_SECAO, "+ CRLF	// Seção - Seção: Atualizações, Consultas, Relatórios ou Miscelaneas
	cQuery += "     XNU.SY_SUBMENU, "+ CRLF // Submenu - Nome da rotina a ser executada
	cQuery += "     XNU.SY_ROTINA, "+ CRLF 	// Descrição - Descrição da rotina
	cQuery += "     XNU.SY_FUNCAO, "+ CRLF 	// Função - Nome técnico da Função
	cQuery += "     XNU.SY_ORDOPER "+ CRLF 	// Ordem da Operação
    If lImpOper
		cQuery += "     ,XNU.SY_OPERAC "+ CRLF 	// Operação - Nome da operação. Exemplo: Incluir, Alterar, Excluir, Etc
	EndIf
    cQuery += " FROM "+cTmpGrp+" GRP (NOLOCK) "+ CRLF
    cQuery += " INNER JOIN "+cTmpXNU+" XNU (NOLOCK) "+ CRLF
    cQuery += "     ON XNU.SY_MENU = GRP.SY_MENU "+ CRLF
    cQuery += " ORDER BY "+ CRLF
    cQuery += "     GRP.SY_GRUPO, "+ CRLF 	// Grupo - Grupo de usuários
	cQuery += "     GRP.SY_GRPDES, "+ CRLF 	// Desc. Grupo - Descrição do Grupo
	cQuery += "     GRP.SY_MENU, "+ CRLF 	// Menu - Menu de acesso do sistema
	cQuery += "     GRP.SY_MODULO, "+ CRLF 	// Módulo - Módulo de acesso do sistema
	cQuery += "     XNU.SY_ORDOPER "+ CRLF 	// Ordem da Operação

    DbUseArea(.T.,"TOPCONN",TCGENQRY(,,cQuery),cTMP1,.F.,.T.)
		
	ProcRegua(RecCount())

	DbGoTop()
	
	While (cTMP1)->(!EOF())
		
		IncProc( "Grupo: " + Lower((cTMP1)->SY_GRPDES) )

		aLinha := IIF(lImpOper,Array(10),Array(9))

		aLinha[01] := (cTMP1)->SY_GRUPO 	// Grupo - Grupo de usuários
		aLinha[02] := (cTMP1)->SY_GRPDES 	// Desc. Grupo - Descrição do Grupo
		aLinha[03] := (cTMP1)->SY_STATUS 	// Status - Status: Ativo ou Bloqueado
		aLinha[04] := (cTMP1)->SY_MENU 		// Menu - Menu de acesso do sistema
		aLinha[05] := (cTMP1)->SY_MODULO 	// Módulo - Módulo de acesso do sistema
		aLinha[06] := (cTMP1)->SY_SECAO		// Seção - Seção: Atualizações, Consultas, Relatórios ou Miscelaneas
		aLinha[07] := (cTMP1)->SY_SUBMENU 	// Submenu - Nome da rotina a ser executada
		aLinha[08] := (cTMP1)->SY_ROTINA 	// Descrição - Descrição da rotina
		aLinha[09] := (cTMP1)->SY_FUNCAO 	// Função - Nome técnico da Função

		If lImpOper
			aLinha[10] := (cTMP1)->SY_OPERAC 	// Operação - Nome da operação. Exemplo: Incluir, Alterar, Excluir, Etc
		EndIf

		oExcel:AddRow( "Lista Grupos", "Lista Grupos", aLinha )

		(cTMP1)->(DbSkip())
	EndDo

    (cTMP1)->(DbCloseArea())

	oExcel:AddworkSheet("Lista Usuarios")
		
	oExcel:AddTable ("Lista Usuarios","Lista Usuarios")
		
    oExcel:AddColumn("Lista Usuarios","Lista Usuarios","Grupo"		,1,1) // Grupo - Grupo de usuários
    oExcel:AddColumn("Lista Usuarios","Lista Usuarios","Desc. Grupo",1,1) // Desc. Grupo - Descrição do Grupo
    oExcel:AddColumn("Lista Usuarios","Lista Usuarios","Login"		,1,1) // Login - Id de acesso do usuário
    oExcel:AddColumn("Lista Usuarios","Lista Usuarios","Nome"		,1,1) // Nome  - Nome completo do usuário
    oExcel:AddColumn("Lista Usuarios","Lista Usuarios","Departamento",1,1) // Departamento - Departamento do usuário
    oExcel:AddColumn("Lista Usuarios","Lista Usuarios","Cargo"		,1,1) // Cargo - Cargo atual do usuário
    oExcel:AddColumn("Lista Usuarios","Lista Usuarios","E-mail"		,1,1) // E-mail - E-mail do usuário
    oExcel:AddColumn("Lista Usuarios","Lista Usuarios","Status"		,1,1) // Status - Status: Ativo ou Bloqueado

    cQuery := " SELECT DISTINCT "+ CRLF
    cQuery += "     GRP.SY_GRUPO, "+ CRLF 	// Grupo - Grupo de usuários
	cQuery += "     GRP.SY_GRPDES, "+ CRLF 	// Desc. Grupo - Descrição do Grupo
	cQuery += "     USR.SY_LOGIN, "+ CRLF 	// Login - Id de acesso do usuário
	cQuery += "     USR.SY_NOME, "+ CRLF 	// Nome  - Nome completo do usuário
	cQuery += "     USR.SY_DEPTO, "+ CRLF 	// Departamento - Departamento do usuário
	cQuery += "     USR.SY_CARGO, "+ CRLF 	// Cargo - Cargo atual do usuário
	cQuery += "     USR.SY_EMAIL, "+ CRLF 	// E-mail - E-mail do usuário
	cQuery += "     USR.SY_STATUS "+ CRLF 	// Status - Status: Ativo ou Bloqueado
    cQuery += " FROM "+cTmpGrp+" GRP (NOLOCK) "+ CRLF
    cQuery += " INNER JOIN "+cTmpUsr+" USR (NOLOCK) "+ CRLF
    cQuery += "     ON USR.SY_GRUPO = GRP.SY_GRUPO "+ CRLF
    cQuery += " ORDER BY "+ CRLF
    cQuery += "     GRP.SY_GRUPO, "+ CRLF 	// Grupo - Grupo de usuários
	cQuery += "     GRP.SY_GRPDES, "+ CRLF 	// Desc. Grupo - Descrição do Grupo
	cQuery += "     USR.SY_LOGIN "+ CRLF 	// Login - Id de acesso do usuário
    
    DbUseArea(.T.,"TOPCONN",TCGENQRY(,,cQuery),cTMP2,.F.,.T.)
		
	ProcRegua(RecCount())

	DbGoTop()
	
	While (cTMP2)->(!EOF())
		
		IncProc( "Usuarios: " + Lower((cTMP2)->SY_LOGIN) )

		aLinha := Array(8)

		aLinha[01] := (cTMP2)->SY_GRUPO 	// Grupo - Grupo de usuários
		aLinha[02] := (cTMP2)->SY_GRPDES 	// Desc. Grupo - Descrição do Grupo
		aLinha[03] := (cTMP2)->SY_LOGIN 	// Login - Id de acesso do usuário
		aLinha[04] := (cTMP2)->SY_NOME 		// Nome  - Nome completo do usuário
		aLinha[05] := (cTMP2)->SY_DEPTO 	// Departamento - Departamento do usuário
		aLinha[06] := (cTMP2)->SY_CARGO 	// Cargo - Cargo atual do usuário
		aLinha[07] := (cTMP2)->SY_EMAIL 	// E-mail - E-mail do usuário
		aLinha[08] := (cTMP2)->SY_STATUS 	// Status - Status: Ativo ou Bloqueado

		oExcel:AddRow( "Lista Usuarios", "Lista Usuarios", aLinha )

		(cTMP2)->(DbSkip())
	EndDo

    (cTMP2)->(DbCloseArea())

	oExcel:Activate()

	cURLXML := '-'+ALLTRIM(CMONTH(DATE()))+ALLTRIM(STR(DAY(DATE())))+SUBSTR(TIME(), 1, 2)+SUBSTR(TIME(), 4, 2)

	//Cria o arquivo
	oExcel:Activate()
	oExcel:GetXMLFile(cDirDocs+"grupos_usuarios"+cURLXML+".xml")

	If __CopyFile(cDirDocs+"grupos_usuarios"+cURLXML+".xml",cPathExcel+"grupos_usuarios"+cURLXML+".xml")
		FErase(cDirDocs+"grupos_usuarios"+cURLXML+".xml")
	EndIf

	If ! ApOleClient( 'MsExcel' )
		MsgAlert( 'MsExcel nao instalado' )
	Else
		oExcelApp := MsExcel():New()
		oExcelApp:WorkBooks:Open(cPathExcel+"grupos_usuarios"+cURLXML+".xml") // Abre uma planilha
		oExcelApp:SetVisible(.T.)
	EndIf

Return .T.

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ FEFINR03 º Autor ³ Wilson A. Silva Jr.º Data ³  23/04/2019 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Relatorio de Acessos e Permissoes por Usuarios.			  º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function ListaModulos(cModulo,nTipo)

Local nModulo 	:= Val(cModulo)
Local xRetorno 	:= ""

DEFAULT nTipo := 1

If nModulo > 0 .And. nModulo <= Len(aModulo)
	DO CASE
		CASE nTipo == 1 // Descrição
			xRetorno := aModulo[nModulo][3]
		CASE nTipo == 2 // Código
			xRetorno := SubStr(aModulo[nModulo][2],5,3)
	ENDCASE
EndIf

Return xRetorno

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ XBuscFuncº Autor ³ Wilson A. Silva Jr.º Data ³  23/04/2019 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Relatorio de Acessos e Permissoes por Usuarios.			  º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function XBuscFunc(aEstrutura, cMenuPai)

Local nX
Local nY

Local cFuncao
Local aBotoes

If Len(aEstrutura) == 5	.And. aEstrutura[2] == "E" // Somente Itens habilitados
	For nX := 1 To Len(aEstrutura[3])
		XBuscFunc(aEstrutura[3][nX], aEstrutura[1][1])
	Next nX
ElseIf Len(aEstrutura) >= 7 .And. aEstrutura[2] == "E" // Somente Itens habilitados
	cFuncao := Upper(RTrim(aEstrutura[3]))
	aBotoes := {}

	If lImpOper //.And. !AllTrim(cTipo)$'Consultas|Relatorios|Miscelaneas'
		cCodMod := ListaModulos(RTrim(aEstrutura[6]),2)
		xStart:='startjob("U_X3LoadMenu",getenvserver(),.T.,cEmpAnt,cFilant,cCodMod,cFuncao)'
		aBotoes :=&xStart
	EndIf

	If ValType(aBotoes) <> "A" .Or. Len(aBotoes) == 0 .Or. ValType(aBotoes[1]) <> "A"
		aBotoes := {}
		AADD( aBotoes, Array(8) )
		aBotoes[1][1] := cTipo   
	EndIf

	For nY := 1 To Len(aBotoes)
		//Se menus com 10x :
        //Imprime as opções do menudef (até 10) que estão marcadas com x
        //Imprime as opções do menudef > 10
        //Se menus com 20x imprime as opções do menudef que estão marcadas com x.
   
	 
	    If (len(aEstrutura[5]) = 10 .and. nY > 10) .or.; 
		   (len(aEstrutura[5]) = 10 .and. Upper(SubStr(aEstrutura[5],nY,1)) == "X") .or. ;
		   (len(aEstrutura[5]) > 10 .and. Upper(SubStr(aEstrutura[5],nY,1)) == "X") .or. ;
		   (len(aBotoes)) = 1

	

			nOrdem++

			DbSelectArea(cTmpXNU)
			RecLock(cTmpXNU,.T.)
				REPLACE SY_MENU		WITH cArqMenu // Menu - Menu de acesso do sistema
				REPLACE SY_SECAO	WITH cTipo // Seção - Seção: Atualizações, Consultas, Relatórios ou Miscelaneas
				REPLACE SY_SUBMENU	WITH RTrim(cMenuPai) // Submenu - Nome da rotina a ser executada
				REPLACE SY_ROTINA	WITH RTrim(StrTran(aEstrutura[1][1],"&")) // Descrição - Descrição da rotina
				REPLACE SY_FUNCAO	WITH cFuncao // Função - Nome técnico da Função
				REPLACE SY_OPERAC	WITH aBotoes[nY][1] // Operação - Nome da operação. Exemplo: Incluir, Alterar, Excluir, Etc
				REPLACE SY_ORDOPER	WITH StrZero(nOrdem,9) // Ordem da Operação
			MsUnLock()
		EndIf
	Next nY
EndIf

Return .T.

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ FEFINR02 º Autor ³ Wilson A. Silva Jr.º Data ³  23/04/2019 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Relatorio de Acessos e Permissoes por Usuarios.			  º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
User Function X3LoadMenu(cEmpTrab,cFilTrab,cCodMod,cFuncao)

Local aBotoes

PREPARE ENVIRONMENT EMPRESA cEmpTrab FILIAL cFilTrab MODULO cCodMod

aBotoes := FWLoadMenuDef(cFuncao)   

If cfuncao = "EICAM102"
   alert("eicam102")
Endif

RESET ENVIRONMENT

Return aBotoes

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³Ljr780RptDefºAutor  ³Vendas e CRM      º Data ³  25/05/06   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Funcao para informar as celulas que serao utilizadas no re- º±±
±±º          ³latorio                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function Ljr780RptDef()

Local oReport		// Objeto do relatorio
Local oSection1		// Objeto da secao 1
Local cMsg 		:= "Este programa ira emitir um relatorio de Lista de Usuários."
Local cNome 	:= "RelatorioUsrSOD-"+DtoS(dDataBase)+"-"+STRTRAN(TIME(),":","")
Local cTMP1  	:= GetNextAlias()
Local cTMP2 	:= GetNextAlias()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Gera a tela com os dados para a confirmação da geracao do relatorio³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oReport:= TReport():New(cNome,"Lista de Usuários",Nil,{|oReport| Ljr780PrtRpt(oReport,cTMP1,cTMP2)}, cMsg )
oReport:SetLandScape()
oReport:DisableOrientation()
oReport:HideFooter()
oReport:SetTotalInLine(.F.)
oReport:ShowParamPage() // Imprimi pagina de parametros

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Define a secao1 do relatorio, informando que o arquivo principal utlizado eh o SL2 e o complementar o SB1³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oSection1 := TRSection():New(oReport,"Lista de Usuários",{cTMP1} )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Define as celulas que irao aparecer na secao1³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
/*
TRCell():New( 	oSection		, <cName>			, [ <cAlias> ]			, [ <cTitle> ],;
				[ <cPicture> ]	, [ <nSize> ]		, [ <.lPixel.> ]		, [ <bBlock> ],;
				[ <"cAlign"> ]	, [ <.lLineBreak.> ], [ <"cHeaderAlign"> ]	, [ <.lCellBreak.> ],;
				[ <nColSpace> ]	, [<.lAutoSize.>]	, [ <nClrBack> ]		, [ <nClrFore> ],;
				[<.lBold.>])
*/
TRCell():New(oSection1,"SY_GRUPO"	,cTMP1, "Grupo"			,"",06	,NIL,{|| (cTMP1)->SY_GRUPO	},,,,,,,,,.T.) 	// Grupo - Grupo de usuários
TRCell():New(oSection1,"SY_GRPDES"	,cTMP1, "Desc. Grupo"	,"",30	,NIL,{|| (cTMP1)->SY_GRPDES	},,,,,,,,,.T.) 	// Desc. Grupo - Descrição do Grupo
If nAnalise == 1
	TRCell():New(oSection1,"SY_LOGIN"	,cTMP1, "Login"			,"",25	,NIL,{|| (cTMP1)->SY_LOGIN	},,,,,,,,,.T.) 	// Login - Id de acesso do usuário
	TRCell():New(oSection1,"SY_NOME"	,cTMP1, "Nome"			,"",40	,NIL,{|| (cTMP1)->SY_NOME	},,,,,,,,,.T.) 	// Nome  - Nome completo do usuário
	//TRCell():New(oSection1,"SY_DEPTO"	,cTMP1, "Departamento"	,"",40	,NIL,{|| (cTMP1)->SY_DEPTO	},,,,,,,,,.T.) 	// Departamento - Departamento do usuário
	//TRCell():New(oSection1,"SY_CARGO"	,cTMP1, "Cargo"			,"",40	,NIL,{|| (cTMP1)->SY_CARGO	},,,,,,,,,.T.) 	// Cargo - Cargo atual do usuário
	//TRCell():New(oSection1,"SY_EMAIL"	,cTMP1, "E-mail"		,"",40	,NIL,{|| (cTMP1)->SY_EMAIL	},,,,,,,,,.T.) 	// E-mail - E-mail do usuário
EndIf
TRCell():New(oSection1,"SY_STATUS"	,cTMP1, "Status"		,"",09	,NIL,{|| (cTMP1)->SY_STATUS	},,,,,,,,,.T.) 	// Status - Status: Ativo ou Bloqueado
//TRCell():New(oSection1,"SY_MENU"	,cTMP1, "Menu"			,"",50	,NIL,{|| (cTMP1)->SY_MENU	},,,,,,,,,.T.) 	// Menu - Menu de acesso do sistema
TRCell():New(oSection1,"SY_MODULO"	,cTMP1, "Módulo"		,"",35	,NIL,{|| (cTMP1)->SY_MODULO	},,,,,,,,,.T.) 	// Módulo - Módulo de acesso do sistema
TRCell():New(oSection1,"SY_SECAO"	,cTMP1, "Seção"			,"",35	,NIL,{|| (cTMP1)->SY_SECAO	},,,,,,,,,.T.)	// Seção - Seção: Atualizações, Consultas, Relatórios ou Miscelaneas
TRCell():New(oSection1,"SY_SUBMENU"	,cTMP1, "Submenu"		,"",35	,NIL,{|| (cTMP1)->SY_SUBMENU	},,,,,,,,,.T.) 	// Submenu - Nome da rotina a ser executada
TRCell():New(oSection1,"SY_ROTINA"	,cTMP1, "Descrição"		,"",35	,NIL,{|| (cTMP1)->SY_ROTINA	},,,,,,,,,.T.) 	// Descrição - Descrição da rotina
TRCell():New(oSection1,"SY_FUNCAO"	,cTMP1, "Função"		,"",35	,NIL,{|| (cTMP1)->SY_FUNCAO	},,,,,,,,,.T.)	// Função - Nome técnico da Função
If lImpOper
	TRCell():New(oSection1,"SY_OPERAC"	,cTMP1, "Operação"		,"",35	,NIL,{|| (cTMP1)->SY_OPERAC	},,,,,,,,,.T.) 	// Operação - Nome da operação. Exemplo: Incluir, Alterar, Excluir, Etc
EndIf

If nAnalise == 2
	oSection2 := TRSection():New(oReport,"Lista de Usuários",{cTMP2} )

	TRCell():New(oSection2,"SY_GRUPO"	,cTMP2, "Grupo"			,"",06	,NIL,{|| (cTMP2)->SY_GRUPO	},,,,,,,,,.T.) 	// Grupo - Grupo de usuários
	TRCell():New(oSection2,"SY_GRPDES"	,cTMP2, "Desc. Grupo"	,"",30	,NIL,{|| (cTMP2)->SY_GRPDES	},,,,,,,,,.T.) 	// Desc. Grupo - Descrição do Grupo
	TRCell():New(oSection2,"SY_LOGIN"	,cTMP2, "Login"			,"",25	,NIL,{|| (cTMP2)->SY_LOGIN	},,,,,,,,,.T.) 	// Login - Id de acesso do usuário
	TRCell():New(oSection2,"SY_NOME"	,cTMP2, "Nome"			,"",40	,NIL,{|| (cTMP2)->SY_NOME	},,,,,,,,,.T.) 	// Nome  - Nome completo do usuário
	//TRCell():New(oSection2,"SY_DEPTO"	,cTMP2, "Departamento"	,"",40	,NIL,{|| (cTMP2)->SY_DEPTO	},,,,,,,,,.T.) 	// Departamento - Departamento do usuário
	//TRCell():New(oSection2,"SY_CARGO"	,cTMP2, "Cargo"			,"",40	,NIL,{|| (cTMP2)->SY_CARGO	},,,,,,,,,.T.) 	// Cargo - Cargo atual do usuário
	//TRCell():New(oSection2,"SY_EMAIL"	,cTMP2, "E-mail"		,"",40	,NIL,{|| (cTMP2)->SY_EMAIL	},,,,,,,,,.T.) 	// E-mail - E-mail do usuário
	TRCell():New(oSection2,"SY_STATUS"	,cTMP2, "Status"		,"",09	,NIL,{|| (cTMP2)->SY_STATUS	},,,,,,,,,.T.) 	// Status - Status: Ativo ou Bloqueado
EndIf

Return oReport

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³Ljr780PrtRptºAutor  ³Vendas e CRM        º Data ³  25/05/06   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Funcao para impressao do relatorio personalizavel             º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function Ljr780PrtRpt(oReport,cTMP1,cTMP2)

Local oSection1 := Nil
Local oSection2 := Nil 
Local cQuery    := ""

Processa({|| RunReport()},"Processando ..." )

If nAnalise == 1
	oSection1 := oReport:Section(1)	// Define a secao 1 do relatorio

	cQuery := " SELECT DISTINCT "+ CRLF		
	cQuery += "     USR.SY_GRUPO, "+ CRLF 	// Grupo - Grupo de usuários
	cQuery += "     USR.SY_GRPDES, "+ CRLF 	// Desc. Grupo - Descrição do Grupo
	cQuery += "     USR.SY_LOGIN, "+ CRLF 	// Login - Id de acesso do usuário
	cQuery += "     USR.SY_NOME, "+ CRLF 	// Nome  - Nome completo do usuário
	cQuery += "     USR.SY_DEPTO, "+ CRLF 	// Departamento - Departamento do usuário
	cQuery += "     USR.SY_CARGO, "+ CRLF 	// Cargo - Cargo atual do usuário
	cQuery += "     USR.SY_EMAIL, "+ CRLF 	// E-mail - E-mail do usuário
	cQuery += "     USR.SY_STATUS, "+ CRLF 	// Status - Status: Ativo ou Bloqueado
	cQuery += "     USR.SY_MENU, "+ CRLF 	// Menu - Menu de acesso do sistema
	cQuery += "     USR.SY_MODULO, "+ CRLF 	// Módulo - Módulo de acesso do sistema
	cQuery += "     XNU.SY_SECAO, "+ CRLF	// Seção - Seção: Atualizações, Consultas, Relatórios ou Miscelaneas
	cQuery += "     XNU.SY_SUBMENU, "+ CRLF // Submenu - Nome da rotina a ser executada
	cQuery += "     XNU.SY_ROTINA, "+ CRLF 	// Descrição - Descrição da rotina
	cQuery += "     XNU.SY_FUNCAO, "+ CRLF 	// Função - Nome técnico da Função
	cQuery += "     XNU.SY_ORDOPER "+ CRLF 	// Ordem da Operação
	If lImpOper
		cQuery += "     ,XNU.SY_OPERAC "+ CRLF 	// Operação - Nome da operação. Exemplo: Incluir, Alterar, Excluir, Etc
	EndIf
	cQuery += " FROM "+cTmpUsr+" USR (NOLOCK) "+ CRLF
	cQuery += " INNER JOIN "+cTmpXNU+" XNU (NOLOCK) "+ CRLF
	cQuery += "     ON XNU.SY_MENU = USR.SY_MENU "+ CRLF
	cQuery += " ORDER BY "+ CRLF
	cQuery += "     USR.SY_GRUPO, "+ CRLF 	// Grupo - Grupo de usuários
	cQuery += "     USR.SY_GRPDES, "+ CRLF 	// Desc. Grupo - Descrição do Grupo
	cQuery += "     USR.SY_LOGIN, "+ CRLF 	// Login - Id de acesso do usuário
	cQuery += "     USR.SY_MENU, "+ CRLF 	// Menu - Menu de acesso do sistema
	cQuery += "     USR.SY_MODULO, "+ CRLF 	// Módulo - Módulo de acesso do sistema
	cQuery += "     XNU.SY_ORDOPER "+ CRLF 	// Ordem da Operação

	DbUseArea(.T.,"TOPCONN",TCGENQRY(,,cQuery),cTMP1,.F.,.T.)
	
	oSection1:Init()
	While !oReport:Cancel() .And. (cTMP1)->(!EOF())
		oSection1:PrintLine()		
		oReport:IncMeter()
		(cTMP1)->(DbSkip())
	EndDo
	oSection1:Finish()

	(cTMP1)->(DbCloseArea())
Else
	oSection1 := oReport:Section(1)	// Define a secao 1 do relatorio
	oSection2 := oReport:Section(2)	// Define a secao 2 do relatorio

    cQuery := " SELECT DISTINCT "+ CRLF		
    cQuery += "     GRP.SY_GRUPO, "+ CRLF 	// Grupo - Grupo de usuários
	cQuery += "     GRP.SY_GRPDES, "+ CRLF 	// Desc. Grupo - Descrição do Grupo
	cQuery += "     GRP.SY_STATUS, "+ CRLF 	// Status - Status: Ativo ou Bloqueado
	cQuery += "     GRP.SY_MENU, "+ CRLF 	// Menu - Menu de acesso do sistema
	cQuery += "     GRP.SY_MODULO, "+ CRLF 	// Módulo - Módulo de acesso do sistema
	cQuery += "     XNU.SY_SECAO, "+ CRLF	// Seção - Seção: Atualizações, Consultas, Relatórios ou Miscelaneas
	cQuery += "     XNU.SY_SUBMENU, "+ CRLF // Submenu - Nome da rotina a ser executada
	cQuery += "     XNU.SY_ROTINA, "+ CRLF 	// Descrição - Descrição da rotina
	cQuery += "     XNU.SY_FUNCAO, "+ CRLF 	// Função - Nome técnico da Função
	cQuery += "     XNU.SY_ORDOPER "+ CRLF 	// Ordem da Operação
    If lImpOper
		cQuery += "     ,XNU.SY_OPERAC "+ CRLF 	// Operação - Nome da operação. Exemplo: Incluir, Alterar, Excluir, Etc
	EndIf
    cQuery += " FROM "+cTmpGrp+" GRP (NOLOCK) "+ CRLF
    cQuery += " INNER JOIN "+cTmpXNU+" XNU (NOLOCK) "+ CRLF
    cQuery += "     ON XNU.SY_MENU = GRP.SY_MENU "+ CRLF
    cQuery += " ORDER BY "+ CRLF
    cQuery += "     GRP.SY_GRUPO, "+ CRLF 	// Grupo - Grupo de usuários
	cQuery += "     GRP.SY_GRPDES, "+ CRLF 	// Desc. Grupo - Descrição do Grupo
	cQuery += "     GRP.SY_MENU, "+ CRLF 	// Menu - Menu de acesso do sistema
	cQuery += "     GRP.SY_MODULO, "+ CRLF 	// Módulo - Módulo de acesso do sistema
	cQuery += "     XNU.SY_ORDOPER "+ CRLF 	// Ordem da Operação

    DbUseArea(.T.,"TOPCONN",TCGENQRY(,,cQuery),cTMP1,.F.,.T.)

	cQuery := " SELECT DISTINCT "+ CRLF
    cQuery += "     GRP.SY_GRUPO, "+ CRLF 	// Grupo - Grupo de usuários
	cQuery += "     GRP.SY_GRPDES, "+ CRLF 	// Desc. Grupo - Descrição do Grupo
	cQuery += "     USR.SY_LOGIN, "+ CRLF 	// Login - Id de acesso do usuário
	cQuery += "     USR.SY_NOME, "+ CRLF 	// Nome  - Nome completo do usuário
	cQuery += "     USR.SY_DEPTO, "+ CRLF 	// Departamento - Departamento do usuário
	cQuery += "     USR.SY_CARGO, "+ CRLF 	// Cargo - Cargo atual do usuário
	cQuery += "     USR.SY_EMAIL, "+ CRLF 	// E-mail - E-mail do usuário
	cQuery += "     USR.SY_STATUS "+ CRLF 	// Status - Status: Ativo ou Bloqueado
    cQuery += " FROM "+cTmpGrp+" GRP (NOLOCK) "+ CRLF
    cQuery += " INNER JOIN "+cTmpUsr+" USR (NOLOCK) "+ CRLF
    cQuery += "     ON USR.SY_GRUPO = GRP.SY_GRUPO "+ CRLF
    cQuery += " ORDER BY "+ CRLF
    cQuery += "     GRP.SY_GRUPO, "+ CRLF 	// Grupo - Grupo de usuários
	cQuery += "     GRP.SY_GRPDES, "+ CRLF 	// Desc. Grupo - Descrição do Grupo
	cQuery += "     USR.SY_LOGIN "+ CRLF 	// Login - Id de acesso do usuário
    
    DbUseArea(.T.,"TOPCONN",TCGENQRY(,,cQuery),cTMP2,.F.,.T.)
	
	oSection1:Init()
	While !oReport:Cancel() .And. (cTMP1)->(!EOF())
		oSection1:PrintLine()
		oReport:IncMeter()
		(cTMP1)->(DbSkip())
	EndDo
	oSection1:Finish()

	oSection2:Init()
	While !oReport:Cancel() .And. (cTMP2)->(!EOF())
		oSection2:PrintLine()
		oReport:IncMeter()
		(cTMP2)->(DbSkip())
	EndDo
	oSection2:Finish()

	(cTMP1)->(DbCloseArea())
	(cTMP2)->(DbCloseArea())
EndIf

Return .T.
